{
  "x-generator": "NSwag v13.8.2.0 (NJsonSchema v10.2.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Riberry",
    "description": "# Introduction\r\n\r\nThe Riberry API is a RESTful-ish API. The development team is based in Melbourne, Australia, and as such have tended towards using British English (en-GB) spelling. A notable instances of this in routing is **Organisations**.\r\n\r\n# Conventions\r\n\r\nThe conventions we have used across the API are:\r\n- JSON format for conversing with endpoints\r\n- JSON response objects will have camelCased properties, or alternatively with PascalCase by defining the following accept header on requests: `Accept: application/json;profile=\"https://en.wikipedia.org/wiki/PascalCase\"`\r\n- POST to create, PUT to update\r\n\r\n# Authentication\r\n\r\nWhile some endpoints are accessible publicly, many require authentication. Once authenticated, the response from an endpoint will be filtered by what the authenticated identity has permission to see.\r\n\r\nTo authenticate, a valid token must be generated and passed to the API.\r\n\r\nTo generate a token, one can either:\r\n- create a user token via `/Authentication/Token`, providing a registered and valid `Email` and `Password`\r\n- as an authenticated identitiy, create a token for you organisaton via a POST to `/OrganisationAccessToken/`\r\n\r\nTo use a token, one can either:\r\n- set it as the bearer [Http Authorization Header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization) `Authorization: Bearer your_token_here`\r\n- set it as a [cookie](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies) with the name \"AccessToken\": `AccessToken=your_token_here`\r\n- set it on the [query string](https://en.wikipedia.org/wiki/Query_string) with the name \"AccessToken\": `api-url?AccessToken=your_token_here`\r\n- using the Swagger UI, click the \"Authorize\" button and enter the value `Bearer your_token_here` into the text box",
    "termsOfService": "/Platform/Terms",
    "contact": {
      "name": "Riberry",
      "email": "support@riberry.io"
    },
    "version": "1.13.8"
  },
  "paths": {
    "/v1/Email": {
      "get": {
        "tags": [
          "Email"
        ],
        "operationId": "Email_GetAll",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "groupId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "statuses",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "$ref": "#/components/schemas/EmailStatus"
              }
            },
            "x-position": 5
          },
          {
            "name": "includeContents",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfEmail"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "This is a webhook called by SendGrid",
        "operationId": "Email_Update",
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Email/User/{userId}": {
      "get": {
        "tags": [
          "Email"
        ],
        "operationId": "Email_GetAllByUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "statuses",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "$ref": "#/components/schemas/EmailStatus"
              }
            },
            "x-position": 5
          },
          {
            "name": "includeContents",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfEmail"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Email/{emailId}": {
      "get": {
        "tags": [
          "Email"
        ],
        "operationId": "Email_Get",
        "parameters": [
          {
            "name": "emailId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Group/{groupId}/Attendance": {
      "get": {
        "tags": [
          "GroupAttendance"
        ],
        "operationId": "GroupAttendance_GetAll",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AttendanceStatus"
                }
              ]
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfUserAttendance"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Group/{groupId}/Attendance/{userId}": {
      "get": {
        "tags": [
          "GroupAttendance"
        ],
        "operationId": "GroupAttendance_Get",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAttendance"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "GroupAttendance"
        ],
        "operationId": "GroupAttendance_Update",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAttendanceSettings"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Meeting": {
      "get": {
        "tags": [
          "Meeting"
        ],
        "operationId": "Meeting_GetAll",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "parentId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfMeeting"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "Meeting"
        ],
        "operationId": "Meeting_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMeetingSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meeting"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Meeting/{meetingId}": {
      "get": {
        "tags": [
          "Meeting"
        ],
        "operationId": "Meeting_Get",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meeting"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "Meeting"
        ],
        "operationId": "Meeting_Update",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMeetingSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "Meeting"
        ],
        "operationId": "Meeting_Delete",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Meeting/{meetingId}/File": {
      "get": {
        "tags": [
          "Meeting"
        ],
        "operationId": "Meeting_GetAllFiles",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfFile"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "Meeting"
        ],
        "operationId": "Meeting_CreateFile",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFileSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Meeting/{meetingId}/File/{fileId}": {
      "get": {
        "tags": [
          "Meeting"
        ],
        "operationId": "Meeting_GetFile",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "Meeting"
        ],
        "operationId": "Meeting_UpdateFile",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFileSettings"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "Meeting"
        ],
        "operationId": "Meeting_DeleteFile",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Meeting/{meetingId}/File/{fileId}/Download": {
      "get": {
        "tags": [
          "Meeting"
        ],
        "operationId": "Meeting_DownloadFile",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/User/{userId}/Attendance": {
      "get": {
        "tags": [
          "UserAttendance"
        ],
        "operationId": "UserAttendance_GetAll",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AttendanceStatus"
                }
              ]
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfGroupAttendance"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/User/{userId}/Attendance/{groupId}": {
      "get": {
        "tags": [
          "UserAttendance"
        ],
        "operationId": "UserAttendance_Get",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupAttendance"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "UserAttendance"
        ],
        "operationId": "UserAttendance_Update",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAttendanceSettings"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Backup": {
      "get": {
        "tags": [
          "Backup"
        ],
        "operationId": "Backup_GetAll",
        "parameters": [
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 1
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfBackup"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "Backup"
        ],
        "operationId": "Backup_Create",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Backup"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Backup/{id}": {
      "get": {
        "tags": [
          "Backup"
        ],
        "operationId": "Backup_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Backup"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ExternalApplication": {
      "get": {
        "tags": [
          "ExternalApplication"
        ],
        "operationId": "ExternalApplication_GetAll",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfExternalApplication"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "ExternalApplication"
        ],
        "operationId": "ExternalApplication_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExternalApplicationSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApplication"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ExternalApplication/{applicationId}": {
      "get": {
        "tags": [
          "ExternalApplication"
        ],
        "operationId": "ExternalApplication_Get",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApplication"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "ExternalApplication"
        ],
        "operationId": "ExternalApplication_Update",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateExternalApplicationSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "ExternalApplication"
        ],
        "operationId": "ExternalApplication_Delete",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Image": {
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "Resizes the given image to the specified size.",
        "description": "If only size is specified, the output image will be in a square shape. \nIf width or/and height are specified, they will override the default size.\nIf none of size, width and height is specified, the original image is returned.",
        "operationId": "Image_Get",
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "description": "Uri of the image to resize.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "size",
            "in": "query",
            "description": "The default width and height of the result image in pixels.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "width",
            "in": "query",
            "description": "A custom width to override the default size.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "height",
            "in": "query",
            "description": "A custom height to override the default size.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "Uri of the resized image.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResizedImage"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Log": {
      "get": {
        "tags": [
          "Log"
        ],
        "operationId": "Log_GetAll",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "logLevel",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 2
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfLog"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Log/{logId}": {
      "get": {
        "tags": [
          "Log"
        ],
        "operationId": "Log_Get",
        "parameters": [
          {
            "name": "logId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Log"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Platform": {
      "get": {
        "tags": [
          "Platform"
        ],
        "operationId": "Platform_Get",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Platform"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Platform/Terms": {
      "get": {
        "tags": [
          "Platform"
        ],
        "operationId": "Platform_Terms",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Platform/DefaultSettings": {
      "get": {
        "tags": [
          "Platform"
        ],
        "operationId": "Platform_DefaultSettings",
        "parameters": [
          {
            "name": "environment",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Platform/Status": {
      "get": {
        "tags": [
          "Platform"
        ],
        "operationId": "Platform_Status",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformStatus"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Projection": {
      "get": {
        "tags": [
          "Projection"
        ],
        "operationId": "Projection_GetAll",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfProjectionBuild"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Projection/{projectionName}": {
      "get": {
        "tags": [
          "Projection"
        ],
        "operationId": "Projection_Get",
        "parameters": [
          {
            "name": "projectionName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectionBuild"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Notification": {
      "get": {
        "tags": [
          "Notification"
        ],
        "operationId": "Notification_GetAll",
        "parameters": [
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 1
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "seen",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "read",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 7
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfNotification"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Notification/{notificationId}": {
      "get": {
        "tags": [
          "Notification"
        ],
        "operationId": "Notification_Get",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "Notification"
        ],
        "operationId": "Notification_Update",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "Notification"
        ],
        "operationId": "Notification_Delete",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Notification/MarkAllAsSeen": {
      "post": {
        "tags": [
          "Notification"
        ],
        "operationId": "Notification_MarkAllAsSeen",
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Notification/MarkAllAsRead": {
      "post": {
        "tags": [
          "Notification"
        ],
        "operationId": "Notification_MarkAllAsRead",
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ScheduledEmail": {
      "get": {
        "tags": [
          "ScheduledEmail"
        ],
        "operationId": "ScheduledEmail_GetAll",
        "parameters": [
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 1
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "groupId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfScheduledEmail"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ScheduledEmail/Recipient/{recipientId}": {
      "get": {
        "tags": [
          "ScheduledEmail"
        ],
        "operationId": "ScheduledEmail_GetAllForRecipient",
        "parameters": [
          {
            "name": "recipientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfScheduledEmail"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ScheduledEmail/{scheduleId}": {
      "get": {
        "tags": [
          "ScheduledEmail"
        ],
        "operationId": "ScheduledEmail_Get",
        "parameters": [
          {
            "name": "scheduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledEmail"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ScheduledEmail/Create": {
      "post": {
        "tags": [
          "ScheduledEmail"
        ],
        "operationId": "ScheduledEmail_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateScheduledEmailSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledEmail"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ScheduledEmail/{scheduleId}/Update": {
      "put": {
        "tags": [
          "ScheduledEmail"
        ],
        "operationId": "ScheduledEmail_Update",
        "parameters": [
          {
            "name": "scheduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateScheduledEmailSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ScheduledEmail/{scheduleId}/Delete": {
      "delete": {
        "tags": [
          "ScheduledEmail"
        ],
        "operationId": "ScheduledEmail_Delete",
        "parameters": [
          {
            "name": "scheduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ScheduledEmail/{scheduleId}/Leave": {
      "post": {
        "tags": [
          "ScheduledEmail"
        ],
        "operationId": "ScheduledEmail_Leave",
        "parameters": [
          {
            "name": "scheduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ObservationDefinition/{definitionId}/Content": {
      "get": {
        "tags": [
          "ObservationContent"
        ],
        "operationId": "ObservationContent_GetAll",
        "parameters": [
          {
            "name": "definitionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "published",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfObservationContent"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ObservationContent/{contentId}": {
      "get": {
        "tags": [
          "ObservationContent"
        ],
        "operationId": "ObservationContent_Get",
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObservationContent"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "ObservationContent"
        ],
        "operationId": "ObservationContent_Update",
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateObservationContentSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "ObservationContent"
        ],
        "operationId": "ObservationContent_Delete",
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ObservationContent": {
      "post": {
        "tags": [
          "ObservationContent"
        ],
        "operationId": "ObservationContent_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateObservationContentSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObservationContent"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ObservationContent/{contentId}/Publish": {
      "post": {
        "tags": [
          "ObservationContent"
        ],
        "operationId": "ObservationContent_Publish",
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Observation/GetAllForArea": {
      "post": {
        "tags": [
          "Observation"
        ],
        "operationId": "Observation_GetAllForArea",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObservationAreaOptions"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfLocatableObservation"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Observation/Group/{groupId}": {
      "get": {
        "tags": [
          "Observation"
        ],
        "operationId": "Observation_GetAllForGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "definitionId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "friendly",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "anonymousUser",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 9
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfObservation"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Observation/Publisher/{publisherId}": {
      "get": {
        "tags": [
          "Observation"
        ],
        "operationId": "Observation_GetAllForPublisher",
        "parameters": [
          {
            "name": "publisherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "definitionId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "groupId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "friendly",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 9
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfObservation"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Observation/{observationId}": {
      "get": {
        "tags": [
          "Observation"
        ],
        "operationId": "Observation_Get",
        "parameters": [
          {
            "name": "observationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "friendly",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Observation"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "Observation"
        ],
        "operationId": "Observation_Update",
        "parameters": [
          {
            "name": "observationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateObservationSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "Observation"
        ],
        "operationId": "Observation_Delete",
        "parameters": [
          {
            "name": "observationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Observation": {
      "post": {
        "tags": [
          "Observation"
        ],
        "operationId": "Observation_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateObservationSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Observation"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Observation/{observationContentId}/Predict": {
      "post": {
        "tags": [
          "Observation"
        ],
        "operationId": "Observation_Predict",
        "parameters": [
          {
            "name": "observationContentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PredictObservationSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateObservationSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Observation/{observationId}/File/{fileId}": {
      "get": {
        "tags": [
          "Observation"
        ],
        "operationId": "Observation_DownloadFile",
        "parameters": [
          {
            "name": "observationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ObservationDefinition/Publisher/{publisherId}": {
      "get": {
        "tags": [
          "ObservationDefinition"
        ],
        "operationId": "ObservationDefinition_GetAllForPublisher",
        "parameters": [
          {
            "name": "publisherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "programId",
            "in": "query",
            "description": "- null/empty to show all\n- program ID to filter to specific program\n- \"none\" to filter to items not in any program",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfObservationDefinition"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ObservationDefinition": {
      "post": {
        "tags": [
          "ObservationDefinition"
        ],
        "operationId": "ObservationDefinition_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateObservationDefinitionSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObservationDefinition"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "get": {
        "tags": [
          "ObservationDefinition"
        ],
        "operationId": "ObservationDefinition_GetAllByActivation",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "consumerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "publisherId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "programId",
            "in": "query",
            "description": "- null/empty to show all\n- program ID to filter to specific program\n- \"none\" to filter to items not in any program",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "itemId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "activated",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfObservationDefinition"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ObservationDefinition/{observationDefinitionId}": {
      "put": {
        "tags": [
          "ObservationDefinition"
        ],
        "operationId": "ObservationDefinition_Update",
        "parameters": [
          {
            "name": "observationDefinitionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateObservationDefinitionSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "ObservationDefinition"
        ],
        "operationId": "ObservationDefinition_Delete",
        "parameters": [
          {
            "name": "observationDefinitionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ObservationDefinition/Published": {
      "get": {
        "tags": [
          "ObservationDefinition"
        ],
        "operationId": "ObservationDefinition_GetAllPublished",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "publisherId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "programId",
            "in": "query",
            "description": "- null/empty to show all\n- program ID to filter to specific program\n- \"none\" to filter to items not in any program",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "countryCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfObservationDefinition"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ObservationDefinition/{id}": {
      "get": {
        "tags": [
          "ObservationDefinition"
        ],
        "operationId": "ObservationDefinition_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObservationDefinition"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ObservationContent/{contentId}/Form": {
      "get": {
        "tags": [
          "ObservationForm"
        ],
        "operationId": "ObservationForm_GetAllForObservationContent",
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfObservationForm"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ObservationForm/{observationFormId}": {
      "get": {
        "tags": [
          "ObservationForm"
        ],
        "operationId": "ObservationForm_Get",
        "parameters": [
          {
            "name": "observationFormId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObservationForm"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "ObservationForm"
        ],
        "operationId": "ObservationForm_Update",
        "parameters": [
          {
            "name": "observationFormId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateObservationFormSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "ObservationForm"
        ],
        "operationId": "ObservationForm_Delete",
        "parameters": [
          {
            "name": "observationFormId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ObservationForm": {
      "post": {
        "tags": [
          "ObservationForm"
        ],
        "operationId": "ObservationForm_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateObservationFormSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObservationForm"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ObservationDefinition/{observationDefinitionId}/Migrate": {
      "put": {
        "tags": [
          "ObservationMigration"
        ],
        "summary": "Change the ownership (publisher) of an given observation definition, all related data including \nactivations and observation will be transferred to the new publisher as well.",
        "operationId": "ObservationMigration_MigrateObservationDefinition",
        "parameters": [
          {
            "name": "observationDefinitionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MigrateObservationDefinitionSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ObservationDefinition/{observationDefinitionId}/Duplicate": {
      "put": {
        "tags": [
          "ObservationMigration"
        ],
        "summary": "Create a duplicate copy of an observation definition under the same publisher.\n            \nNOTE: this might run for a while if there are a lot of observations need to be migrated, when tested\nlocally, 2400 observations took about 3 minutes to finish, as such, the command would be timeout but it\nwill finish eventually, check the logs for progress.",
        "operationId": "ObservationMigration_DuplicateObservationDefinition",
        "parameters": [
          {
            "name": "observationDefinitionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DuplicateObservationDefinitionSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObservationDefinition"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Observation/AnonymousUser": {
      "get": {
        "tags": [
          "ObservationMigration"
        ],
        "operationId": "ObservationMigration_GetObservationAnonymousUsers",
        "parameters": [
          {
            "name": "definitionId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "groupId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        },
        "deprecated": true
      }
    },
    "/v1/Observation/AnonymousUser/BatchMerge": {
      "put": {
        "tags": [
          "ObservationMigration"
        ],
        "operationId": "ObservationMigration_BatchMergeObservationAnonymousUsers",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchMergeObservationAnonymousUsersSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        },
        "deprecated": true
      }
    },
    "/v1/ObservationSettings": {
      "get": {
        "tags": [
          "ObservationSettings"
        ],
        "operationId": "ObservationSettings_GetAll",
        "parameters": [
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 1
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "definitionId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "organisationId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfObservationSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "ObservationSettings"
        ],
        "operationId": "ObservationSettings_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateObservationSettingsSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObservationSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ObservationSettings/{settingsId}": {
      "get": {
        "tags": [
          "ObservationSettings"
        ],
        "operationId": "ObservationSettings_Get",
        "parameters": [
          {
            "name": "settingsId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObservationSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "ObservationSettings"
        ],
        "operationId": "ObservationSettings_Update",
        "parameters": [
          {
            "name": "settingsId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateObservationSettingsSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "ObservationSettings"
        ],
        "operationId": "ObservationSettings_Delete",
        "parameters": [
          {
            "name": "settingsId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Customer/{customerId}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Get",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Customer/User/{userId}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_GetForUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Merchant/{merchantId}": {
      "get": {
        "tags": [
          "Merchant"
        ],
        "operationId": "Merchant_Get",
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Merchant"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Merchant/Organisation/{organisationId}": {
      "get": {
        "tags": [
          "Merchant"
        ],
        "operationId": "Merchant_GetForOrganisation",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Merchant"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Merchant/CreateUrl": {
      "get": {
        "tags": [
          "Merchant"
        ],
        "operationId": "Merchant_CreateUrl",
        "parameters": [
          {
            "name": "PublisherId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "RedirectUrl",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Merchant": {
      "post": {
        "tags": [
          "Merchant"
        ],
        "operationId": "Merchant_Create",
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "state",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Payment/{paymentId}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "operationId": "Payment_Get",
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Payment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "operationId": "Payment_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/PaymentSettings/PublicKey": {
      "get": {
        "tags": [
          "PaymentSettings"
        ],
        "operationId": "PaymentSettings_PublicKey",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/PaymentSettings/Regions": {
      "get": {
        "tags": [
          "PaymentSettings"
        ],
        "operationId": "PaymentSettings_Regions",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/PaymentSettings/Countries": {
      "get": {
        "tags": [
          "PaymentSettings"
        ],
        "operationId": "PaymentSettings_Countries",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/PaymentSettings/Currencies": {
      "get": {
        "tags": [
          "PaymentSettings"
        ],
        "operationId": "PaymentSettings_Currencies",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Currency"
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Product": {
      "get": {
        "tags": [
          "Product"
        ],
        "operationId": "Product_GetAll",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "publisherId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "countryCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "operationId": "Product_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Product/{productId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "operationId": "Product_Get",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "operationId": "Product_Update",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "operationId": "Product_Delete",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Publisher": {
      "get": {
        "tags": [
          "Publisher"
        ],
        "operationId": "Publisher_GetAll",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfPublisher"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Publisher/{publisherId}": {
      "get": {
        "tags": [
          "Publisher"
        ],
        "operationId": "Publisher_Get",
        "parameters": [
          {
            "name": "publisherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Publisher"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Publisher/{publisherId}/Request": {
      "post": {
        "tags": [
          "Publisher"
        ],
        "operationId": "Publisher_Request",
        "parameters": [
          {
            "name": "publisherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestPublisherSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Publisher"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Publisher/{publisherId}/Approve": {
      "post": {
        "tags": [
          "Publisher"
        ],
        "operationId": "Publisher_Approve",
        "parameters": [
          {
            "name": "publisherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovePublisherSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Publisher"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Stripe/Event": {
      "post": {
        "tags": [
          "Stripe"
        ],
        "operationId": "Stripe_Event",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Task/{taskId}/File": {
      "get": {
        "tags": [
          "TaskFile"
        ],
        "operationId": "TaskFile_GetAll",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfFile"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "TaskFile"
        ],
        "operationId": "TaskFile_Create",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFileSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Task/{taskId}/File/{fileId}": {
      "get": {
        "tags": [
          "TaskFile"
        ],
        "operationId": "TaskFile_Get",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "TaskFile"
        ],
        "operationId": "TaskFile_Update",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFileSettings"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "TaskFile"
        ],
        "operationId": "TaskFile_Delete",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Task/{taskId}/File/{fileId}/Download": {
      "get": {
        "tags": [
          "TaskFile"
        ],
        "operationId": "TaskFile_Download",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Implementation": {
      "get": {
        "tags": [
          "Implementation"
        ],
        "operationId": "Implementation_GetAll",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "publisherId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "consumerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "teamId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfImplementation"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "Implementation"
        ],
        "operationId": "Implementation_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateImplementationSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Implementation"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Implementation/{implementationId}": {
      "get": {
        "tags": [
          "Implementation"
        ],
        "operationId": "Implementation_Get",
        "parameters": [
          {
            "name": "implementationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Implementation"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "Implementation"
        ],
        "operationId": "Implementation_Update",
        "parameters": [
          {
            "name": "implementationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateImplementationSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "Implementation"
        ],
        "operationId": "Implementation_Delete",
        "parameters": [
          {
            "name": "implementationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Implementation/{implementationId}/Task": {
      "get": {
        "tags": [
          "Implementation"
        ],
        "operationId": "Implementation_GetAllTasks",
        "parameters": [
          {
            "name": "implementationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfTask"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ItemActivation/Publisher/{publisherId}": {
      "get": {
        "tags": [
          "ItemActivation"
        ],
        "operationId": "ItemActivation_GetAllForPublisher",
        "parameters": [
          {
            "name": "publisherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "itemType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "programId",
            "in": "query",
            "description": "- null/empty to show all\n- program ID to filter to specific program\n- \"none\" to filter to items not in any program",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "consumerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "includeDeactivated",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfItemActivation"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ItemActivation": {
      "get": {
        "tags": [
          "ItemActivation"
        ],
        "operationId": "ItemActivation_GetAllByActivation",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "consumerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "itemType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "itemId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "programId",
            "in": "query",
            "description": "- null/empty to show all\n- program ID to filter to specific program\n- \"none\" to filter to items not in any program",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "publisherId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfItemActivation"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "ItemActivation"
        ],
        "operationId": "ItemActivation_Create",
        "parameters": [
          {
            "name": "consumerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "itemId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemActivation"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ItemActivation/{itemActivationId}": {
      "get": {
        "tags": [
          "ItemActivation"
        ],
        "operationId": "ItemActivation_Get",
        "parameters": [
          {
            "name": "itemActivationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemActivation"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "ItemActivation"
        ],
        "operationId": "ItemActivation_Update",
        "parameters": [
          {
            "name": "itemActivationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "activated",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ItemActivation/Item/{itemId}/Consumer/{consumerId}": {
      "get": {
        "tags": [
          "ItemActivation"
        ],
        "operationId": "ItemActivation_Get2",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "consumerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemActivation"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ProgramActivation": {
      "get": {
        "tags": [
          "ProgramActivation"
        ],
        "operationId": "ProgramActivation_GetAll",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "programId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "consumerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfProgramActivation"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ProgramActivation/Publisher/{publisherId}": {
      "get": {
        "tags": [
          "ProgramActivation"
        ],
        "operationId": "ProgramActivation_GetAllForPublisher",
        "parameters": [
          {
            "name": "publisherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "programId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfProgramActivation"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ProgramActivation/{id}": {
      "get": {
        "tags": [
          "ProgramActivation"
        ],
        "operationId": "ProgramActivation_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramActivation"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ProgramActivation/Program/{programId}/Consumer/{consumerId}": {
      "get": {
        "tags": [
          "ProgramActivation"
        ],
        "operationId": "ProgramActivation_Get2",
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "consumerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramActivation"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ProgramActivation/ProgramPhase": {
      "post": {
        "tags": [
          "ProgramActivation"
        ],
        "operationId": "ProgramActivation_CreateByPhase",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateProgramPhaseSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramActivation"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ProgramActivation/{programActivationId}/ProgramPhase/{programPhaseId}/SetCurrent": {
      "post": {
        "tags": [
          "ProgramActivation"
        ],
        "operationId": "ProgramActivation_SetCurrentPhase",
        "parameters": [
          {
            "name": "programActivationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "programPhaseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramActivation"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ProgramActivation/{programActivationId}/ProgramPhase/{programPhaseId}/Deactivate": {
      "post": {
        "tags": [
          "ProgramActivation"
        ],
        "operationId": "ProgramActivation_Deactivate",
        "parameters": [
          {
            "name": "programActivationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "programPhaseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramActivation"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Program/Publisher/{publisherId}": {
      "get": {
        "tags": [
          "Program"
        ],
        "operationId": "Program_GetAllForPublisher",
        "parameters": [
          {
            "name": "publisherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfProgram"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Program/Published": {
      "get": {
        "tags": [
          "Program"
        ],
        "operationId": "Program_GetAllPublished",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "publisherId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "programId",
            "in": "query",
            "description": "- null/empty to show all\n- program ID to filter to specific program",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "countryCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfProgram"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Program": {
      "get": {
        "tags": [
          "Program"
        ],
        "operationId": "Program_GetAllByActivation",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "consumerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "publisherId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "itemId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "activated",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 7
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfProgram"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "Program"
        ],
        "operationId": "Program_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgramSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Program"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Program/{id}": {
      "get": {
        "tags": [
          "Program"
        ],
        "operationId": "Program_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Program"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Program/{programId}": {
      "put": {
        "tags": [
          "Program"
        ],
        "operationId": "Program_Update",
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgramSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "Program"
        ],
        "operationId": "Program_Delete",
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ProgramPhase/{id}": {
      "get": {
        "tags": [
          "ProgramPhase"
        ],
        "operationId": "ProgramPhase_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramPhase"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ProgramPhase": {
      "post": {
        "tags": [
          "ProgramPhase"
        ],
        "operationId": "ProgramPhase_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgramPhaseSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramPhase"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ProgramPhase/{programPhaseId}": {
      "put": {
        "tags": [
          "ProgramPhase"
        ],
        "operationId": "ProgramPhase_Update",
        "parameters": [
          {
            "name": "programPhaseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgramPhaseSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "ProgramPhase"
        ],
        "operationId": "ProgramPhase_Delete",
        "parameters": [
          {
            "name": "programPhaseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Task/{taskId}/Comment": {
      "get": {
        "tags": [
          "TaskComment"
        ],
        "operationId": "TaskComment_GetAll",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfComment"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "TaskComment"
        ],
        "operationId": "TaskComment_Create",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Task/{taskId}/Comment/{commentId}": {
      "get": {
        "tags": [
          "TaskComment"
        ],
        "operationId": "TaskComment_Get",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "TaskComment"
        ],
        "operationId": "TaskComment_Update",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommentSettings"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "TaskComment"
        ],
        "operationId": "TaskComment_Delete",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Task/{taskId}/Comment/{commentId}/Reply": {
      "get": {
        "tags": [
          "TaskComment"
        ],
        "operationId": "TaskComment_GetAllReplies",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfComment"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Task": {
      "get": {
        "tags": [
          "Task"
        ],
        "operationId": "Task_GetAll",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "implementationId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfTask"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "Task"
        ],
        "operationId": "Task_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Task/{taskId}": {
      "get": {
        "tags": [
          "Task"
        ],
        "operationId": "Task_Get",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "Task"
        ],
        "operationId": "Task_Update",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "Task"
        ],
        "operationId": "Task_Delete",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Sharing/Alias/{aliasId}": {
      "get": {
        "tags": [
          "Sharing"
        ],
        "operationId": "Sharing_GetByAlias",
        "parameters": [
          {
            "name": "aliasId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sharing"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Sharing/{sharingId}": {
      "delete": {
        "tags": [
          "Sharing"
        ],
        "operationId": "Sharing_Delete",
        "parameters": [
          {
            "name": "sharingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Sharing/GroupInvitation/Group/{groupId}": {
      "get": {
        "tags": [
          "Sharing"
        ],
        "operationId": "Sharing_GetAllGroupInvitationsForGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfSharing"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Sharing/GroupInvitation": {
      "put": {
        "tags": [
          "Sharing"
        ],
        "operationId": "Sharing_CreateForGroupInvitation",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupInvitationSharingSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sharing"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Ticket": {
      "get": {
        "tags": [
          "Ticket"
        ],
        "operationId": "Ticket_GetAll",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfTicket"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "Ticket"
        ],
        "operationId": "Ticket_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTicketSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Ticket/{ticketId}": {
      "get": {
        "tags": [
          "Ticket"
        ],
        "operationId": "Ticket_Get",
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "Ticket"
        ],
        "operationId": "Ticket_Update",
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTicketSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Survey/{surveyId}/Content": {
      "get": {
        "tags": [
          "SurveyContent"
        ],
        "operationId": "SurveyContent_GetAll",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfSurveyContent"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "SurveyContent"
        ],
        "operationId": "SurveyContent_Create",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSurveyContentSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyContent"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Survey/{surveyId}/Content/{contentId}": {
      "get": {
        "tags": [
          "SurveyContent"
        ],
        "operationId": "SurveyContent_Get",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyContent"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "SurveyContent"
        ],
        "operationId": "SurveyContent_Update",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSurveyContentSettings"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "SurveyContent"
        ],
        "operationId": "SurveyContent_Delete",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/{contentId}/Publish": {
      "put": {
        "tags": [
          "SurveyContent"
        ],
        "operationId": "SurveyContent_Publish",
        "parameters": [
          {
            "name": "surveyId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/SurveyContent/QuestionTypes": {
      "get": {
        "tags": [
          "SurveyContent"
        ],
        "operationId": "SurveyContent_QuestionTypes",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyQuestionTypes"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/SurveyContent/AnswerTypes": {
      "get": {
        "tags": [
          "SurveyContent"
        ],
        "operationId": "SurveyContent_AnswerTypes",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyAnswerTypes"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/SurveyContent/Example": {
      "get": {
        "tags": [
          "SurveyContent"
        ],
        "operationId": "SurveyContent_Example",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveySettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/SurveyContent/Schema": {
      "get": {
        "tags": [
          "SurveyContent"
        ],
        "operationId": "SurveyContent_Schema",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Survey/Publisher/{publisherId}": {
      "get": {
        "tags": [
          "Survey"
        ],
        "operationId": "Survey_GetAllForPublisher",
        "parameters": [
          {
            "name": "publisherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfSurvey"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Survey": {
      "post": {
        "tags": [
          "Survey"
        ],
        "operationId": "Survey_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSurveySettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Survey"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "get": {
        "tags": [
          "Survey"
        ],
        "operationId": "Survey_GetAllByActivation",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "consumerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "publisherId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "programId",
            "in": "query",
            "description": "- null/empty to show all\n- program ID to filter to specific program\n- \"none\" to filter to items not in any program",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "itemId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "activated",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfSurvey"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Survey/{id}": {
      "get": {
        "tags": [
          "Survey"
        ],
        "operationId": "Survey_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Survey"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Survey/{surveyId}": {
      "put": {
        "tags": [
          "Survey"
        ],
        "operationId": "Survey_Update",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSurveySettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "Survey"
        ],
        "operationId": "Survey_Delete",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Survey/Published": {
      "get": {
        "tags": [
          "Survey"
        ],
        "operationId": "Survey_GetAllPublished",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "publisherId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "programId",
            "in": "query",
            "description": "- null/empty to show all\n- program ID to filter to specific program\n- \"none\" to filter to items not in any program",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "countryCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfSurvey"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/SurveyRequest/Group/{groupId}": {
      "get": {
        "tags": [
          "SurveyRequest"
        ],
        "operationId": "SurveyRequest_GetAllForGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "surveyId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfSurveyRequest"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/SurveyRequest/{requestId}": {
      "get": {
        "tags": [
          "SurveyRequest"
        ],
        "operationId": "SurveyRequest_Get",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyRequest"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "SurveyRequest"
        ],
        "operationId": "SurveyRequest_Delete",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/SurveyRequest/Token/{token}": {
      "get": {
        "tags": [
          "SurveyRequest"
        ],
        "operationId": "SurveyRequest_GetForToken",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/SurveyRequest": {
      "post": {
        "tags": [
          "SurveyRequest"
        ],
        "operationId": "SurveyRequest_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSurveyRequestSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyRequest"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/SurveyResponse/Survey/{surveyId}": {
      "get": {
        "tags": [
          "SurveyResponse"
        ],
        "operationId": "SurveyResponse_GetAllForSurvey",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "groupId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "publisherId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "contentId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "jobTypeId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "submitted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 9
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfSurveyResponse"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/SurveyResponse/Respondent/{respondentId}": {
      "get": {
        "tags": [
          "SurveyResponse"
        ],
        "operationId": "SurveyResponse_GetAllForRespondent",
        "parameters": [
          {
            "name": "respondentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "surveyId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "submitted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfSurveyResponse"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/SurveyResponse/{responseId}": {
      "get": {
        "tags": [
          "SurveyResponse"
        ],
        "operationId": "SurveyResponse_Get",
        "parameters": [
          {
            "name": "responseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyResponse"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "SurveyResponse"
        ],
        "operationId": "SurveyResponse_Update",
        "parameters": [
          {
            "name": "responseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSurveyResponseSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "SurveyResponse"
        ],
        "operationId": "SurveyResponse_Delete",
        "parameters": [
          {
            "name": "surveyId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "responseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/SurveyResponse": {
      "post": {
        "tags": [
          "SurveyResponse"
        ],
        "operationId": "SurveyResponse_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSurveyResponseSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyResponse"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Actor/{actorId}": {
      "get": {
        "tags": [
          "Actor"
        ],
        "operationId": "Actor_Get",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Actor"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/BookAttempt/Actor/{actorId}": {
      "get": {
        "tags": [
          "BookAttempt"
        ],
        "operationId": "BookAttempt_GetAllForActor",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "moduleId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfModuleAttemptOfBookResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/BookAttempt/Group/{groupId}": {
      "get": {
        "tags": [
          "BookAttempt"
        ],
        "operationId": "BookAttempt_GetAllForGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "moduleId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "actorType",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ActorType"
                }
              ]
            },
            "x-position": 6
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfModuleAttemptOfBookResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/BookAttempt/{moduleAttemptId}": {
      "get": {
        "tags": [
          "BookAttempt"
        ],
        "operationId": "BookAttempt_Get",
        "parameters": [
          {
            "name": "moduleAttemptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleAttemptOfBookResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "BookAttempt"
        ],
        "operationId": "BookAttempt_Update",
        "parameters": [
          {
            "name": "moduleAttemptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateModuleAttemptSettingsOfBookResult"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "BookAttempt"
        ],
        "operationId": "BookAttempt_Delete",
        "parameters": [
          {
            "name": "moduleAttemptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/BookAttempt": {
      "post": {
        "tags": [
          "BookAttempt"
        ],
        "operationId": "BookAttempt_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleAttemptSettingsOfBookResult"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleAttemptOfBookResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/BookAttempt/{moduleId}/Content/{contentId}/ExamplePass": {
      "get": {
        "tags": [
          "BookAttempt"
        ],
        "operationId": "BookAttempt_ExamplePass",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/BookContent/{moduleId}/Content": {
      "get": {
        "tags": [
          "BookContent"
        ],
        "operationId": "BookContent_GetAll",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfModuleContentOfBookSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "BookContent"
        ],
        "operationId": "BookContent_Create",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleContentSettingsOfBookSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleContentOfBookSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/BookContent/{moduleId}/Content/{contentId}": {
      "get": {
        "tags": [
          "BookContent"
        ],
        "operationId": "BookContent_Get",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleContentOfBookSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "BookContent"
        ],
        "operationId": "BookContent_Update",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateModuleContentSettingsOfBookSettings"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "BookContent"
        ],
        "operationId": "BookContent_Delete",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/BookContent/{moduleId}/Content/FromZip": {
      "post": {
        "tags": [
          "BookContent"
        ],
        "operationId": "BookContent_CreateFromZip",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleContentOfBookSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/BookContent/{moduleId}/Content/{contentId}/FromZip": {
      "put": {
        "tags": [
          "BookContent"
        ],
        "operationId": "BookContent_UpdateFromZip",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/BookContent/{moduleId}/Content/{contentId}/Publish": {
      "post": {
        "tags": [
          "BookContent"
        ],
        "operationId": "BookContent_Publish",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/BookContent/{moduleId}/Content/{contentId}/File/{fileId}/Download": {
      "get": {
        "tags": [
          "BookContent"
        ],
        "operationId": "BookContent_DownloadFile",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/BookContent/{moduleId}/Content/{contentId}/Export": {
      "get": {
        "tags": [
          "BookContent"
        ],
        "operationId": "BookContent_Export",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateModuleContentSettingsOfBookSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/BookContent/Example": {
      "get": {
        "tags": [
          "BookContent"
        ],
        "operationId": "BookContent_Example",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/BookContent/Schema": {
      "get": {
        "tags": [
          "BookContent"
        ],
        "operationId": "BookContent_Schema",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Certificate": {
      "get": {
        "tags": [
          "Certificate"
        ],
        "operationId": "Certificate_GetAll",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "publisherId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfCertificate"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "Certificate"
        ],
        "operationId": "Certificate_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCertificateSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Certificate"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Certificate/{certificateId}": {
      "get": {
        "tags": [
          "Certificate"
        ],
        "operationId": "Certificate_Get",
        "parameters": [
          {
            "name": "certificateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Certificate"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "Certificate"
        ],
        "operationId": "Certificate_Update",
        "parameters": [
          {
            "name": "certificateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCertificateSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "Certificate"
        ],
        "operationId": "Certificate_Delete",
        "parameters": [
          {
            "name": "certificateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Certification/Trainee/{traineeId}": {
      "get": {
        "tags": [
          "Certification"
        ],
        "operationId": "Certification_GetAllForTrainee",
        "parameters": [
          {
            "name": "traineeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfCertification"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Certification/Trainee/{traineeId}/History": {
      "get": {
        "tags": [
          "Certification"
        ],
        "summary": "Gets the certifications for a trainee at the given time.",
        "operationId": "Certification_GetAllHistoryForTrainee",
        "parameters": [
          {
            "name": "traineeId",
            "in": "path",
            "required": true,
            "description": "The user id of the trainee.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "at",
            "in": "query",
            "description": "The UTC time at which to get certificates. If not specified, the current time is used.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfCertificationFact"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Certification/Group/{groupId}/History": {
      "get": {
        "tags": [
          "Certification"
        ],
        "summary": "Gets the list of users with a certificate in a group at a specified time, optionally filtered by their status and roles in the group.",
        "description": "Only users who were involved (started or certified) with the certificate will be returned, i.e. users who never started the certification process will not be included.",
        "operationId": "Certification_GetAllHistoryForGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "certificateId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "memberStatus",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/MemberStatus"
                }
              ]
            },
            "x-position": 5
          },
          {
            "name": "role",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "at",
            "in": "query",
            "description": "The UTC time at which to get certificates. If not specified, the current time is used.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 7
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfCertificationFact"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Certification/{certificationId}": {
      "get": {
        "tags": [
          "Certification"
        ],
        "operationId": "Certification_Get",
        "parameters": [
          {
            "name": "certificationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Certification"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Certification/{certificationId}/Export": {
      "get": {
        "tags": [
          "Certification"
        ],
        "operationId": "Certification_Export",
        "parameters": [
          {
            "name": "certificationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Certification/Download": {
      "get": {
        "tags": [
          "Certification"
        ],
        "operationId": "Certification_Download",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Class": {
      "get": {
        "tags": [
          "Class"
        ],
        "summary": "Get a list of all classes",
        "operationId": "Class_GetAll",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "organisationId",
            "in": "query",
            "description": "Optional organisation id filter",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "teamId",
            "in": "query",
            "description": "Optional team id filter",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "publisherId",
            "in": "query",
            "description": "Optional publisher id filter",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "courseId",
            "in": "query",
            "description": "Optional course id filter",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "programId",
            "in": "query",
            "description": "- null/empty to show all\n- program ID to filter to specific program\n- \"none\" to filter to items not in any program",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "activated",
            "in": "query",
            "description": "Optional filter by class activation state",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 9
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfClass"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "Class"
        ],
        "operationId": "Class_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClassSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Class"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Class/{classId}": {
      "get": {
        "tags": [
          "Class"
        ],
        "operationId": "Class_Get",
        "parameters": [
          {
            "name": "classId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Class"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "Class"
        ],
        "operationId": "Class_Update",
        "parameters": [
          {
            "name": "classId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClassSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "Class"
        ],
        "operationId": "Class_Delete",
        "parameters": [
          {
            "name": "classId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Class/{classId}/NotifyAssessors": {
      "post": {
        "tags": [
          "Class"
        ],
        "summary": "Send assessment requested notification to trainers",
        "operationId": "Class_NotifyAssessors",
        "parameters": [
          {
            "name": "classId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotifyAssessorsSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Course/Publisher/{publisherId}": {
      "get": {
        "tags": [
          "Course"
        ],
        "operationId": "Course_GetAllForPublisher",
        "parameters": [
          {
            "name": "publisherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "programId",
            "in": "query",
            "description": "- null/empty to show all\n- program ID to filter to specific program\n- \"none\" to filter to items not in any program",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfCourse"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Course": {
      "post": {
        "tags": [
          "Course"
        ],
        "operationId": "Course_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCourseSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "get": {
        "tags": [
          "Course"
        ],
        "operationId": "Course_GetAllByActivation",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "consumerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "publisherId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "programId",
            "in": "query",
            "description": "- null/empty to show all\n- program ID to filter to specific program\n- \"none\" to filter to items not in any program",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "itemId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "activated",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfCourse"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Course/{courseId}": {
      "put": {
        "tags": [
          "Course"
        ],
        "operationId": "Course_Update",
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCourseSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "Course"
        ],
        "operationId": "Course_Delete",
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Course/Published": {
      "get": {
        "tags": [
          "Course"
        ],
        "operationId": "Course_GetAllPublished",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "publisherId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "programId",
            "in": "query",
            "description": "- null/empty to show all\n- program ID to filter to specific program\n- \"none\" to filter to items not in any program",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "countryCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfCourse"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Course/{id}": {
      "get": {
        "tags": [
          "Course"
        ],
        "operationId": "Course_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Enrolment/Trainee/{traineeId}": {
      "get": {
        "tags": [
          "Enrolment"
        ],
        "operationId": "Enrolment_GetAllForTrainee",
        "parameters": [
          {
            "name": "traineeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "activated",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "programId",
            "in": "query",
            "description": "- null/empty to show all\n- program ID to filter to specific program\n- \"none\" to filter to items not in any program",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfEnrolment"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Enrolment/Class/{classId}": {
      "get": {
        "tags": [
          "Enrolment"
        ],
        "operationId": "Enrolment_GetAllForClass",
        "parameters": [
          {
            "name": "classId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfEnrolment"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Enrolment/{enrolmentId}": {
      "get": {
        "tags": [
          "Enrolment"
        ],
        "operationId": "Enrolment_Get",
        "parameters": [
          {
            "name": "enrolmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Enrolment"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ModuleAttempt/Actor/{actorId}": {
      "get": {
        "tags": [
          "ModuleAttempt"
        ],
        "operationId": "ModuleAttempt_GetAllForActor",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "moduleId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfModuleAttempt"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ModuleAttempt/Group/{groupId}": {
      "get": {
        "tags": [
          "ModuleAttempt"
        ],
        "summary": "Gets all module attempts within the given group.",
        "operationId": "ModuleAttempt_GetAllForGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "description": "The group to get module attempts from",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "moduleId",
            "in": "query",
            "description": "Filter the results by module id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "actorType",
            "in": "query",
            "description": "Filter the results by actor type i.e. User, TrainingSession or Team. If left null, all actor types will be searched for.",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ActorType"
                }
              ]
            },
            "x-position": 6
          },
          {
            "name": "from",
            "in": "query",
            "description": "Start time of the module attempts",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "to",
            "in": "query",
            "description": "End time of the module attempts",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfModuleAttempt"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ModuleAttempt/{moduleAttemptId}": {
      "get": {
        "tags": [
          "ModuleAttempt"
        ],
        "operationId": "ModuleAttempt_Get",
        "parameters": [
          {
            "name": "moduleAttemptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleAttempt"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "ModuleAttempt"
        ],
        "operationId": "ModuleAttempt_Delete",
        "parameters": [
          {
            "name": "moduleAttemptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Module": {
      "get": {
        "tags": [
          "Module"
        ],
        "operationId": "Module_GetAll",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "publisherId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfModule"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "Module"
        ],
        "summary": "Creates a module using the given data",
        "operationId": "Module_Create",
        "requestBody": {
          "x-name": "settings",
          "description": "The data used to create the module",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Module/{moduleId}": {
      "get": {
        "tags": [
          "Module"
        ],
        "operationId": "Module_Get",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "Module"
        ],
        "operationId": "Module_Update",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateModuleSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "Module"
        ],
        "operationId": "Module_Delete",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Module/{moduleId}/File": {
      "get": {
        "tags": [
          "Module"
        ],
        "operationId": "Module_GetAllFiles",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfFile"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "Module"
        ],
        "summary": "Creates a file and attaches it to the module",
        "operationId": "Module_CreateFile",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "description": "Id of the module to attach the file to",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "description": "Data used to create the file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFileSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Information about the created file",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Module/{moduleId}/File/{fileId}": {
      "get": {
        "tags": [
          "Module"
        ],
        "operationId": "Module_GetFile",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "Module"
        ],
        "operationId": "Module_UpdateFile",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFileSettings"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "Module"
        ],
        "operationId": "Module_DeleteFile",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Module/{moduleId}/File/{fileId}/Download": {
      "get": {
        "tags": [
          "Module"
        ],
        "operationId": "Module_DownloadFile",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ModuleNps/Publisher/{publisherId}": {
      "get": {
        "tags": [
          "ModuleNps"
        ],
        "operationId": "ModuleNps_GetAllForPublisher",
        "parameters": [
          {
            "name": "publisherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfModuleNps"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ModuleNps/Module/{moduleId}": {
      "get": {
        "tags": [
          "ModuleNps"
        ],
        "operationId": "ModuleNps_GetAllForModule",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfModuleNps"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ModuleNps/{npsId}": {
      "get": {
        "tags": [
          "ModuleNps"
        ],
        "operationId": "ModuleNps_Get",
        "parameters": [
          {
            "name": "npsId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nps"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "ModuleNps"
        ],
        "operationId": "ModuleNps_Delete",
        "parameters": [
          {
            "name": "npsId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/ModuleNps": {
      "post": {
        "tags": [
          "ModuleNps"
        ],
        "operationId": "ModuleNps_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNpsSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nps"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/QuizAttempt/Actor/{actorId}": {
      "get": {
        "tags": [
          "QuizAttempt"
        ],
        "operationId": "QuizAttempt_GetAllForActor",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "moduleId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfModuleAttemptOfQuizResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/QuizAttempt/Group/{groupId}": {
      "get": {
        "tags": [
          "QuizAttempt"
        ],
        "operationId": "QuizAttempt_GetAllForGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "moduleId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "actorType",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ActorType"
                }
              ]
            },
            "x-position": 6
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfModuleAttemptOfQuizResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/QuizAttempt/{moduleAttemptId}": {
      "get": {
        "tags": [
          "QuizAttempt"
        ],
        "operationId": "QuizAttempt_Get",
        "parameters": [
          {
            "name": "moduleAttemptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleAttemptOfQuizResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "QuizAttempt"
        ],
        "operationId": "QuizAttempt_Update",
        "parameters": [
          {
            "name": "moduleAttemptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateModuleAttemptSettingsOfQuizResult"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "QuizAttempt"
        ],
        "operationId": "QuizAttempt_Delete",
        "parameters": [
          {
            "name": "moduleAttemptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/QuizAttempt": {
      "post": {
        "tags": [
          "QuizAttempt"
        ],
        "operationId": "QuizAttempt_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleAttemptSettingsOfQuizResult"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleAttemptOfQuizResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/QuizAttempt/{moduleId}/Content/{contentId}/ExamplePass": {
      "get": {
        "tags": [
          "QuizAttempt"
        ],
        "operationId": "QuizAttempt_ExamplePass",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuizResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/QuizContent/{moduleId}/Content": {
      "get": {
        "tags": [
          "QuizContent"
        ],
        "operationId": "QuizContent_GetAll",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfModuleContentOfQuizSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "QuizContent"
        ],
        "operationId": "QuizContent_Create",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleContentSettingsOfQuizSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleContentOfQuizSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/QuizContent/{moduleId}/Content/{contentId}": {
      "get": {
        "tags": [
          "QuizContent"
        ],
        "operationId": "QuizContent_Get",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleContentOfQuizSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "QuizContent"
        ],
        "operationId": "QuizContent_Update",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateModuleContentSettingsOfQuizSettings"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "QuizContent"
        ],
        "operationId": "QuizContent_Delete",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/QuizContent/{moduleId}/Content/FromZip": {
      "post": {
        "tags": [
          "QuizContent"
        ],
        "operationId": "QuizContent_CreateFromZip",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleContentOfQuizSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/QuizContent/{moduleId}/Content/{contentId}/FromZip": {
      "put": {
        "tags": [
          "QuizContent"
        ],
        "operationId": "QuizContent_UpdateFromZip",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/QuizContent/{moduleId}/Content/{contentId}/Publish": {
      "post": {
        "tags": [
          "QuizContent"
        ],
        "operationId": "QuizContent_Publish",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/QuizContent/{moduleId}/Content/{contentId}/File/{fileId}/Download": {
      "get": {
        "tags": [
          "QuizContent"
        ],
        "operationId": "QuizContent_DownloadFile",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/QuizContent/{moduleId}/Content/{contentId}/Export": {
      "get": {
        "tags": [
          "QuizContent"
        ],
        "operationId": "QuizContent_Export",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateModuleContentSettingsOfQuizSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/QuizContent/Example": {
      "get": {
        "tags": [
          "QuizContent"
        ],
        "operationId": "QuizContent_Example",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuizSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/QuizContent/Schema": {
      "get": {
        "tags": [
          "QuizContent"
        ],
        "operationId": "QuizContent_Schema",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/RevisionAttempt/Actor/{actorId}": {
      "get": {
        "tags": [
          "RevisionAttempt"
        ],
        "operationId": "RevisionAttempt_GetAllForActor",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "moduleId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfModuleAttemptOfRevisionResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/RevisionAttempt/Group/{groupId}": {
      "get": {
        "tags": [
          "RevisionAttempt"
        ],
        "operationId": "RevisionAttempt_GetAllForGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "moduleId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "actorType",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ActorType"
                }
              ]
            },
            "x-position": 6
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfModuleAttemptOfRevisionResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/RevisionAttempt/{moduleAttemptId}": {
      "get": {
        "tags": [
          "RevisionAttempt"
        ],
        "operationId": "RevisionAttempt_Get",
        "parameters": [
          {
            "name": "moduleAttemptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleAttemptOfRevisionResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "RevisionAttempt"
        ],
        "operationId": "RevisionAttempt_Update",
        "parameters": [
          {
            "name": "moduleAttemptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateModuleAttemptSettingsOfRevisionResult"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "RevisionAttempt"
        ],
        "operationId": "RevisionAttempt_Delete",
        "parameters": [
          {
            "name": "moduleAttemptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/RevisionAttempt": {
      "post": {
        "tags": [
          "RevisionAttempt"
        ],
        "operationId": "RevisionAttempt_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleAttemptSettingsOfRevisionResult"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleAttemptOfRevisionResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/RevisionAttempt/{moduleId}/Content/{contentId}/ExamplePass": {
      "get": {
        "tags": [
          "RevisionAttempt"
        ],
        "operationId": "RevisionAttempt_ExamplePass",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevisionResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/RevisionContent/{moduleId}/Content": {
      "get": {
        "tags": [
          "RevisionContent"
        ],
        "operationId": "RevisionContent_GetAll",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfModuleContentOfRevisionSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "RevisionContent"
        ],
        "operationId": "RevisionContent_Create",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleContentSettingsOfRevisionSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleContentOfRevisionSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/RevisionContent/{moduleId}/Content/{contentId}": {
      "get": {
        "tags": [
          "RevisionContent"
        ],
        "operationId": "RevisionContent_Get",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleContentOfRevisionSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "RevisionContent"
        ],
        "operationId": "RevisionContent_Update",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateModuleContentSettingsOfRevisionSettings"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "RevisionContent"
        ],
        "operationId": "RevisionContent_Delete",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/RevisionContent/{moduleId}/Content/FromZip": {
      "post": {
        "tags": [
          "RevisionContent"
        ],
        "operationId": "RevisionContent_CreateFromZip",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleContentOfRevisionSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/RevisionContent/{moduleId}/Content/{contentId}/FromZip": {
      "put": {
        "tags": [
          "RevisionContent"
        ],
        "operationId": "RevisionContent_UpdateFromZip",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/RevisionContent/{moduleId}/Content/{contentId}/Publish": {
      "post": {
        "tags": [
          "RevisionContent"
        ],
        "operationId": "RevisionContent_Publish",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/RevisionContent/{moduleId}/Content/{contentId}/File/{fileId}/Download": {
      "get": {
        "tags": [
          "RevisionContent"
        ],
        "operationId": "RevisionContent_DownloadFile",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/RevisionContent/{moduleId}/Content/{contentId}/Export": {
      "get": {
        "tags": [
          "RevisionContent"
        ],
        "operationId": "RevisionContent_Export",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateModuleContentSettingsOfRevisionSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/RevisionContent/Example": {
      "get": {
        "tags": [
          "RevisionContent"
        ],
        "operationId": "RevisionContent_Example",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevisionSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/RevisionContent/Schema": {
      "get": {
        "tags": [
          "RevisionContent"
        ],
        "operationId": "RevisionContent_Schema",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/TrainingSession": {
      "get": {
        "tags": [
          "TrainingSession"
        ],
        "operationId": "TrainingSession_GetAll",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "groupId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TrainingSessionStatus"
                }
              ]
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfTrainingSession"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "TrainingSession"
        ],
        "operationId": "TrainingSession_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrainingSessionSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingSession"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/TrainingSession/{trainingSessionId}": {
      "get": {
        "tags": [
          "TrainingSession"
        ],
        "operationId": "TrainingSession_Get",
        "parameters": [
          {
            "name": "trainingSessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingSession"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "TrainingSession"
        ],
        "operationId": "TrainingSession_Update",
        "parameters": [
          {
            "name": "trainingSessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTrainingSessionSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "TrainingSession"
        ],
        "operationId": "TrainingSession_Delete",
        "parameters": [
          {
            "name": "trainingSessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/VideoAttempt/Actor/{actorId}": {
      "get": {
        "tags": [
          "VideoAttempt"
        ],
        "operationId": "VideoAttempt_GetAllForActor",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "moduleId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfModuleAttemptOfVideoResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/VideoAttempt/Group/{groupId}": {
      "get": {
        "tags": [
          "VideoAttempt"
        ],
        "operationId": "VideoAttempt_GetAllForGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "moduleId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "actorType",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ActorType"
                }
              ]
            },
            "x-position": 6
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfModuleAttemptOfVideoResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/VideoAttempt/{moduleAttemptId}": {
      "get": {
        "tags": [
          "VideoAttempt"
        ],
        "operationId": "VideoAttempt_Get",
        "parameters": [
          {
            "name": "moduleAttemptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleAttemptOfVideoResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "VideoAttempt"
        ],
        "operationId": "VideoAttempt_Update",
        "parameters": [
          {
            "name": "moduleAttemptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateModuleAttemptSettingsOfVideoResult"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "VideoAttempt"
        ],
        "operationId": "VideoAttempt_Delete",
        "parameters": [
          {
            "name": "moduleAttemptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/VideoAttempt": {
      "post": {
        "tags": [
          "VideoAttempt"
        ],
        "operationId": "VideoAttempt_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleAttemptSettingsOfVideoResult"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleAttemptOfVideoResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/VideoAttempt/{moduleId}/Content/{contentId}/ExamplePass": {
      "get": {
        "tags": [
          "VideoAttempt"
        ],
        "operationId": "VideoAttempt_ExamplePass",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/VideoContent/{moduleId}/Content": {
      "get": {
        "tags": [
          "VideoContent"
        ],
        "operationId": "VideoContent_GetAll",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfModuleContentOfVideoSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "VideoContent"
        ],
        "operationId": "VideoContent_Create",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleContentSettingsOfVideoSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleContentOfVideoSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/VideoContent/{moduleId}/Content/{contentId}": {
      "get": {
        "tags": [
          "VideoContent"
        ],
        "operationId": "VideoContent_Get",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleContentOfVideoSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "VideoContent"
        ],
        "operationId": "VideoContent_Update",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateModuleContentSettingsOfVideoSettings"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "VideoContent"
        ],
        "operationId": "VideoContent_Delete",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/VideoContent/{moduleId}/Content/FromZip": {
      "post": {
        "tags": [
          "VideoContent"
        ],
        "operationId": "VideoContent_CreateFromZip",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleContentOfVideoSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/VideoContent/{moduleId}/Content/{contentId}/FromZip": {
      "put": {
        "tags": [
          "VideoContent"
        ],
        "operationId": "VideoContent_UpdateFromZip",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/VideoContent/{moduleId}/Content/{contentId}/Publish": {
      "post": {
        "tags": [
          "VideoContent"
        ],
        "operationId": "VideoContent_Publish",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/VideoContent/{moduleId}/Content/{contentId}/File/{fileId}/Download": {
      "get": {
        "tags": [
          "VideoContent"
        ],
        "operationId": "VideoContent_DownloadFile",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/VideoContent/{moduleId}/Content/{contentId}/Export": {
      "get": {
        "tags": [
          "VideoContent"
        ],
        "operationId": "VideoContent_Export",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateModuleContentSettingsOfVideoSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/VideoContent/Example": {
      "get": {
        "tags": [
          "VideoContent"
        ],
        "operationId": "VideoContent_Example",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/VideoContent/Schema": {
      "get": {
        "tags": [
          "VideoContent"
        ],
        "operationId": "VideoContent_Schema",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/AssessmentAttempt/Actor/{actorId}": {
      "get": {
        "tags": [
          "AssessmentAttempt"
        ],
        "operationId": "AssessmentAttempt_GetAllForActor",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "moduleId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfModuleAttemptOfAssessmentResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/AssessmentAttempt/Group/{groupId}": {
      "get": {
        "tags": [
          "AssessmentAttempt"
        ],
        "operationId": "AssessmentAttempt_GetAllForGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "moduleId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "actorType",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ActorType"
                }
              ]
            },
            "x-position": 6
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfModuleAttemptOfAssessmentResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/AssessmentAttempt/{moduleAttemptId}": {
      "get": {
        "tags": [
          "AssessmentAttempt"
        ],
        "operationId": "AssessmentAttempt_Get",
        "parameters": [
          {
            "name": "moduleAttemptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleAttemptOfAssessmentResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "AssessmentAttempt"
        ],
        "operationId": "AssessmentAttempt_Update",
        "parameters": [
          {
            "name": "moduleAttemptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateModuleAttemptSettingsOfAssessmentResult"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "AssessmentAttempt"
        ],
        "operationId": "AssessmentAttempt_Delete",
        "parameters": [
          {
            "name": "moduleAttemptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/AssessmentAttempt": {
      "post": {
        "tags": [
          "AssessmentAttempt"
        ],
        "operationId": "AssessmentAttempt_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleAttemptSettingsOfAssessmentResult"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleAttemptOfAssessmentResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/AssessmentAttempt/{moduleId}/Content/{contentId}/ExamplePass": {
      "get": {
        "tags": [
          "AssessmentAttempt"
        ],
        "operationId": "AssessmentAttempt_ExamplePass",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/AssessmentContent/{moduleId}/Content": {
      "get": {
        "tags": [
          "AssessmentContent"
        ],
        "operationId": "AssessmentContent_GetAll",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfModuleContentOfAssessmentSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "AssessmentContent"
        ],
        "operationId": "AssessmentContent_Create",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleContentSettingsOfAssessmentSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleContentOfAssessmentSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/AssessmentContent/{moduleId}/Content/{contentId}": {
      "get": {
        "tags": [
          "AssessmentContent"
        ],
        "operationId": "AssessmentContent_Get",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleContentOfAssessmentSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "AssessmentContent"
        ],
        "operationId": "AssessmentContent_Update",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateModuleContentSettingsOfAssessmentSettings"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "AssessmentContent"
        ],
        "operationId": "AssessmentContent_Delete",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/AssessmentContent/{moduleId}/Content/FromZip": {
      "post": {
        "tags": [
          "AssessmentContent"
        ],
        "operationId": "AssessmentContent_CreateFromZip",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleContentOfAssessmentSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/AssessmentContent/{moduleId}/Content/{contentId}/FromZip": {
      "put": {
        "tags": [
          "AssessmentContent"
        ],
        "operationId": "AssessmentContent_UpdateFromZip",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/AssessmentContent/{moduleId}/Content/{contentId}/Publish": {
      "post": {
        "tags": [
          "AssessmentContent"
        ],
        "operationId": "AssessmentContent_Publish",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/AssessmentContent/{moduleId}/Content/{contentId}/File/{fileId}/Download": {
      "get": {
        "tags": [
          "AssessmentContent"
        ],
        "operationId": "AssessmentContent_DownloadFile",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/AssessmentContent/{moduleId}/Content/{contentId}/Export": {
      "get": {
        "tags": [
          "AssessmentContent"
        ],
        "operationId": "AssessmentContent_Export",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateModuleContentSettingsOfAssessmentSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/AssessmentContent/Example": {
      "get": {
        "tags": [
          "AssessmentContent"
        ],
        "operationId": "AssessmentContent_Example",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentSettings"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/AssessmentContent/Schema": {
      "get": {
        "tags": [
          "AssessmentContent"
        ],
        "operationId": "AssessmentContent_Schema",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/AssessmentSubAttempt/Actor/{actorId}": {
      "get": {
        "tags": [
          "AssessmentSubAttempt"
        ],
        "operationId": "AssessmentSubAttempt_GetAllForActor",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "assessmentId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfAssessmentSubAttempt"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/AssessmentSubAttempt/Group/{groupId}": {
      "get": {
        "tags": [
          "AssessmentSubAttempt"
        ],
        "operationId": "AssessmentSubAttempt_GetAllForGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "assessmentId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "actorType",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ActorType"
                }
              ]
            },
            "x-position": 6
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfAssessmentSubAttempt"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/AssessmentSubAttempt/{subAttemptId}": {
      "get": {
        "tags": [
          "AssessmentSubAttempt"
        ],
        "operationId": "AssessmentSubAttempt_Get",
        "parameters": [
          {
            "name": "subAttemptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentSubAttempt"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "AssessmentSubAttempt"
        ],
        "operationId": "AssessmentSubAttempt_Update",
        "parameters": [
          {
            "name": "subAttemptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssessmentSubAttemptSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "AssessmentSubAttempt"
        ],
        "operationId": "AssessmentSubAttempt_Delete",
        "parameters": [
          {
            "name": "subAttemptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/AssessmentSubAttempt": {
      "post": {
        "tags": [
          "AssessmentSubAttempt"
        ],
        "operationId": "AssessmentSubAttempt_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAssessmentSubAttemptSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentSubAttempt"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Authentication/SignIn": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Set authentication cookie",
        "operationId": "Authentication_SignIn",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Authentication/SignOut": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Clear authentication cookie",
        "operationId": "Authentication_SignOut",
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Authentication/Token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Generate a TokenModel",
        "description": "To use the token, set the returned value to one of either:\n- the HTTP Authorization Header: `Authorization=Bearer your_token_here`\n- a cookie named \"AccessToken\": AccessToken=your_token_here`\n- the AccessToken in the query string: `&amp;AccessToken=your_token_here`",
        "operationId": "Authentication_Token",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeToken"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Authentication/RefreshToken": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "operationId": "Authentication_RefreshToken",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Authentication/Impersonate/{userId}": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Generate a TokenModel on behalf of userId",
        "description": "This requires ImpersonateUserPermission at the system level.\n\nThis allows the impersonator to act on behalf of the target user;\nhowever any events generated will still be audited against the\noriginal user.",
        "operationId": "Authentication_Impersonate",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Authentication/Unimpersonate": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Revert the supplied TokenModel to one with no\nimpersonating data",
        "description": "Requires the current authentication token to be impersonating\nanother user.",
        "operationId": "Authentication_Unimpersonate",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Authentication/Identity": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Gets the Identity",
        "description": "Returns the Identity based of the authentication\nof the request, whether HTTP header, cookie or query string.\n            \nIf the request is not authenticated it will return null.",
        "operationId": "Authentication_Identity",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Identity"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Authentication/Permitted": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Checks if the authenticated Identity has the given permission",
        "operationId": "Authentication_Permitted",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "The required permission",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "groupId",
            "in": "query",
            "description": "The GroupId. If this is null or empty, all the current identity's\ngroups will be searched.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "orChildren",
            "in": "query",
            "description": "If groupId is provided and orChildren\nis true, all child groups of groupId\nwill also be checked",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Returns true if the current identity is permitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        },
        "deprecated": true
      }
    },
    "/v1/Authentication/Permitted/{permission}": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "operationId": "Authentication_PermittedAll",
        "parameters": [
          {
            "name": "permission",
            "in": "path",
            "required": true,
            "description": "The required permission",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "groupIds",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Returns true if the current identity is permitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/CommunicationPreferences/{userId}": {
      "get": {
        "tags": [
          "CommunicationPreferences"
        ],
        "operationId": "CommunicationPreferences_Get",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationPreferences"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "CommunicationPreferences"
        ],
        "operationId": "CommunicationPreferences_Update",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommunicationPreferencesSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/CommunicationPreferences/Unsubscribe": {
      "get": {
        "tags": [
          "CommunicationPreferences"
        ],
        "operationId": "CommunicationPreferences_Unsubscribe",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsubscribeToken"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "CommunicationPreferences"
        ],
        "operationId": "CommunicationPreferences_Unsubscribe2",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsubscribeToken"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/EmailRegistration": {
      "post": {
        "tags": [
          "EmailRegistration"
        ],
        "summary": "Check if the given email is registered in the system.",
        "description": "This method applies a 2 second delay to prevent abuse",
        "operationId": "EmailRegistration_Get",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "200 OK if the email is found, else a 404",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Group/{groupId}/Comment": {
      "get": {
        "tags": [
          "GroupComment"
        ],
        "operationId": "GroupComment_GetAll",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "includeChildGroups",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfGroupComment"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "GroupComment"
        ],
        "operationId": "GroupComment_Create",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupComment"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Group/{groupId}/Comment/{commentId}": {
      "get": {
        "tags": [
          "GroupComment"
        ],
        "operationId": "GroupComment_Get",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupComment"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "GroupComment"
        ],
        "operationId": "GroupComment_Update",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommentSettings"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "GroupComment"
        ],
        "operationId": "GroupComment_Delete",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Group/{groupId}/Comment/{commentId}/Reply": {
      "get": {
        "tags": [
          "GroupComment"
        ],
        "operationId": "GroupComment_GetAllReplies",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfComment"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Group/{groupId}": {
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "Group_Get",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Group/{groupId}/File": {
      "get": {
        "tags": [
          "GroupFile"
        ],
        "operationId": "GroupFile_GetAll",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "includeChildGroups",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfGroupFile"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "GroupFile"
        ],
        "operationId": "GroupFile_Create",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFileSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupFile"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Group/{groupId}/File/{fileId}": {
      "get": {
        "tags": [
          "GroupFile"
        ],
        "operationId": "GroupFile_Get",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupFile"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "GroupFile"
        ],
        "operationId": "GroupFile_Update",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFileSettings"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "GroupFile"
        ],
        "operationId": "GroupFile_Delete",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Group/{groupId}/File/{fileId}/Download": {
      "get": {
        "tags": [
          "GroupFile"
        ],
        "operationId": "GroupFile_Download",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/JobType": {
      "get": {
        "tags": [
          "JobType"
        ],
        "operationId": "JobType_GetAll",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfJobType"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "JobType"
        ],
        "operationId": "JobType_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJobTypeSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobType"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/JobType/{jobTypeId}": {
      "get": {
        "tags": [
          "JobType"
        ],
        "operationId": "JobType_Get",
        "parameters": [
          {
            "name": "jobTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobType"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "JobType"
        ],
        "operationId": "JobType_Update",
        "parameters": [
          {
            "name": "jobTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateJobTypeSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "JobType"
        ],
        "operationId": "JobType_Delete",
        "parameters": [
          {
            "name": "jobTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Label/Group/{groupId}": {
      "get": {
        "tags": [
          "Label"
        ],
        "operationId": "Label_GetAllForGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfLabel"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Label/{labelId}": {
      "get": {
        "tags": [
          "Label"
        ],
        "operationId": "Label_Get",
        "parameters": [
          {
            "name": "labelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Label"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "Label"
        ],
        "operationId": "Label_Update",
        "parameters": [
          {
            "name": "labelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLabelSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "Label"
        ],
        "operationId": "Label_Delete",
        "parameters": [
          {
            "name": "labelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Label": {
      "post": {
        "tags": [
          "Label"
        ],
        "operationId": "Label_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLabelSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Label"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Member/Group/{groupId}": {
      "get": {
        "tags": [
          "Member"
        ],
        "operationId": "Member_GetAllForGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/MemberStatus"
                }
              ]
            },
            "x-position": 5
          },
          {
            "name": "jobTypeIds",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 6
          },
          {
            "name": "jobCategories",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 7
          },
          {
            "name": "roles",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 8
          },
          {
            "name": "includeDeactivated",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 9
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfMember"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Member/Group/{groupId}/Child/{childGroupType}": {
      "get": {
        "tags": [
          "Member"
        ],
        "operationId": "Member_GetAllForChildGroups",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "childGroupType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 5
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/MemberStatus"
                }
              ]
            },
            "x-position": 6
          },
          {
            "name": "jobTypeIds",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 7
          },
          {
            "name": "jobCategories",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 8
          },
          {
            "name": "memberRoles",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 9
          },
          {
            "name": "identityPermission",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "includeDeactivated",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 11
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfMember"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Member/User/{userId}": {
      "get": {
        "tags": [
          "Member"
        ],
        "operationId": "Member_GetAllForUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/MemberStatus"
                }
              ]
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfMember"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Member/Group/{groupId}/History": {
      "get": {
        "tags": [
          "Member"
        ],
        "summary": "Gets the list of users in a group at the given time. ",
        "description": "The user needs to have the ReadMemberPermission in the given group. ",
        "operationId": "Member_GetAllGroupHistory",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "description": "Id of the group to get the users from.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "at",
            "in": "query",
            "description": "The UTC time at which to get users. If not specified, the current time is used.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status used to filter the result.",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/MemberStatus"
                }
              ]
            },
            "x-position": 3
          },
          {
            "name": "role",
            "in": "query",
            "description": "The role used to filter the result",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "The list of users with their membership status and roles within the group at the given time.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemberHistory"
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Member/Group/{groupId}/User/{userId}": {
      "get": {
        "tags": [
          "Member"
        ],
        "operationId": "Member_Get",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Member/Group/{groupId}/User/{userId}/Add": {
      "post": {
        "tags": [
          "Member"
        ],
        "operationId": "Member_Add",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddGroupMemberSettings"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Member/Group/{groupId}/User/Join": {
      "post": {
        "tags": [
          "Member"
        ],
        "operationId": "Member_Join",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Member/Group/{groupId}/User/{userId}/Update": {
      "put": {
        "tags": [
          "Member"
        ],
        "operationId": "Member_Update",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGroupMemberSettings"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Member/Group/{groupId}/User/{userId}/Remove": {
      "put": {
        "tags": [
          "Member"
        ],
        "operationId": "Member_Remove",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Member/Group/{groupId}/User/{userId}/Ban": {
      "put": {
        "tags": [
          "Member"
        ],
        "operationId": "Member_Ban",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "reason",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Member/Group/{groupId}/User/Leave": {
      "put": {
        "tags": [
          "Member"
        ],
        "operationId": "Member_Leave",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Member/GroupInvitation/{invitationId}/Accept": {
      "put": {
        "tags": [
          "Member"
        ],
        "operationId": "Member_AcceptGroupInvitation",
        "parameters": [
          {
            "name": "invitationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Member/Email": {
      "post": {
        "tags": [
          "Member"
        ],
        "operationId": "Member_EmailAll",
        "parameters": [
          {
            "name": "groupId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "message",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "role",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Member/Group/{groupId}/User/{userId}/Email": {
      "post": {
        "tags": [
          "Member"
        ],
        "operationId": "Member_Email",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "message",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/OrganisationAccessToken": {
      "get": {
        "tags": [
          "OrganisationAccessToken"
        ],
        "operationId": "OrganisationAccessToken_GetAll",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "organisationId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfOrganisationAccessToken"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "OrganisationAccessToken"
        ],
        "operationId": "OrganisationAccessToken_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganisationAccessTokenSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationAccessToken"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/OrganisationAccessToken/{tokenId}": {
      "get": {
        "tags": [
          "OrganisationAccessToken"
        ],
        "operationId": "OrganisationAccessToken_GetAll2",
        "parameters": [
          {
            "name": "tokenId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationAccessToken"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "OrganisationAccessToken"
        ],
        "operationId": "OrganisationAccessToken_Delete",
        "parameters": [
          {
            "name": "tokenId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Organisation": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "operationId": "Organisation_GetAll",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "identityPermissions",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfOrganisation"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "Organisation"
        ],
        "operationId": "Organisation_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganisationSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Organisation/{organisationId}": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "operationId": "Organisation_Get",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "Organisation"
        ],
        "operationId": "Organisation_Update",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrganisationSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "Organisation"
        ],
        "operationId": "Organisation_Delete",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Password/{userId}": {
      "get": {
        "tags": [
          "Password"
        ],
        "operationId": "Password_Get",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Password"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "Password"
        ],
        "operationId": "Password_Update",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Password/{userId}/UpdateTwoFactorAuthentication": {
      "put": {
        "tags": [
          "Password"
        ],
        "operationId": "Password_UpdateTwoFactorAuthentication",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTwoFactorAuthenticationSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Password/RequestReset": {
      "post": {
        "tags": [
          "Password"
        ],
        "operationId": "Password_RequestReset",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestResetPasswordSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Password/Reset": {
      "post": {
        "tags": [
          "Password"
        ],
        "operationId": "Password_Reset",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/PhoneNumberRegistration/{phoneNumber}": {
      "get": {
        "tags": [
          "PhoneNumberRegistration"
        ],
        "summary": "Check if the phoneNumber is registered in the system",
        "description": "This method applies a 2 second delay to prevent abuse",
        "operationId": "PhoneNumberRegistration_Get",
        "parameters": [
          {
            "name": "phoneNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "200 OK if the phoneNumber is found, else a 404",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Role": {
      "get": {
        "tags": [
          "Role"
        ],
        "operationId": "Role_GetAll",
        "parameters": [
          {
            "name": "groupType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfRole"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Role/{roleName}": {
      "get": {
        "tags": [
          "Role"
        ],
        "operationId": "Role_Get",
        "parameters": [
          {
            "name": "roleName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Team": {
      "get": {
        "tags": [
          "Team"
        ],
        "operationId": "Team_GetAll",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "organisationId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "identityPermissions",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfTeam"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "Team"
        ],
        "operationId": "Team_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTeamSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/Team/{teamId}": {
      "get": {
        "tags": [
          "Team"
        ],
        "operationId": "Team_Get",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "Team"
        ],
        "operationId": "Team_Update",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTeamSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "Team"
        ],
        "operationId": "Team_Delete",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/UserActivity/Group/{groupId}": {
      "get": {
        "tags": [
          "UserActivity"
        ],
        "operationId": "UserActivity_GetAllForGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "moduleType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "programId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfUserActivity"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/UserActivity/Publisher/{publisherId}": {
      "get": {
        "tags": [
          "UserActivity"
        ],
        "operationId": "UserActivity_GetAllForPublisher",
        "parameters": [
          {
            "name": "publisherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 4
          },
          {
            "name": "moduleType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "programId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfUserActivity"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/User": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "User_GetAll",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            },
            "x-position": 2
          },
          {
            "name": "Take",
            "in": "query",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 0.0
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfUser"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "User_Create",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/User/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "User_Get",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "operationId": "User_Update",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "operationId": "User_Delete",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/User/Onboard": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "User_Onboard",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnboardUserSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/User/{userId}/Activate": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "User_Activate",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/User/Merge": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "User_Merge",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MergeUserSettings"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/User/{userId}/Contact": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "User_Contact",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "message",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/User/{userId}/SendWelcomeEmail": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "User_SendWelcomeEmail",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendWelcomeEmailSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/User/WelcomeEmailTemplate": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "User_WelcomeEmailTemplate",
        "parameters": [
          {
            "name": "UserName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "UserEmail",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "CreatorName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Message.CreatorName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "Message.CreatorImageUri",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "Message.CreatorDescription",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Message.Message",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "WelcomeButtonUri",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "WelcomeButtonText",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "Group.Title",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "Group.ImageUri",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 11
          },
          {
            "name": "Group.Uri",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 12
          },
          {
            "name": "Group.Description",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 13
          },
          {
            "name": "Group.Subtitle",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 14
          },
          {
            "name": "Group.SubtitleImageUri",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 15
          },
          {
            "name": "Group.ActionButton",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 16
          },
          {
            "name": "Group.ActionUri",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 17
          },
          {
            "name": "ApplicationName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 18
          },
          {
            "name": "ProductName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 19
          },
          {
            "name": "SupportUri",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 20
          },
          {
            "name": "TermOfServiceUri",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 21
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/User/ContactEmailTemplate": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "User_ContactEmailTemplate",
        "parameters": [
          {
            "name": "UserName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "CreatorEmail",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "CreatorName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Message.CreatorName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "Message.CreatorImageUri",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "Message.CreatorDescription",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Message.Message",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "Group.Title",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "Group.ImageUri",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "Group.Uri",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "Group.Description",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 11
          },
          {
            "name": "Group.Subtitle",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 12
          },
          {
            "name": "Group.SubtitleImageUri",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 13
          },
          {
            "name": "Group.ActionButton",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 14
          },
          {
            "name": "Group.ActionUri",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 15
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/UserEmail/{userId}": {
      "get": {
        "tags": [
          "UserEmail"
        ],
        "operationId": "UserEmail_Get",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEmails"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "post": {
        "tags": [
          "UserEmail"
        ],
        "operationId": "UserEmail_Add",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEmailSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "delete": {
        "tags": [
          "UserEmail"
        ],
        "operationId": "UserEmail_Remove",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEmailSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/UserEmail/{userId}/ChangePrimary": {
      "put": {
        "tags": [
          "UserEmail"
        ],
        "operationId": "UserEmail_ChangePrimary",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEmailSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/UserEmail/{userId}/SendVerification": {
      "post": {
        "tags": [
          "UserEmail"
        ],
        "operationId": "UserEmail_SendVerification",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEmailSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/UserEmail/Verify": {
      "get": {
        "tags": [
          "UserEmail"
        ],
        "operationId": "UserEmail_Verify",
        "parameters": [
          {
            "name": "verificationToken",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEmailVerificationToken"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/UserEmail/Verify/{verificationToken}": {
      "post": {
        "tags": [
          "UserEmail"
        ],
        "operationId": "UserEmail_Verify2",
        "parameters": [
          {
            "name": "verificationToken",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEmailVerificationToken"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/UserEmail/{userId}/Contact": {
      "post": {
        "tags": [
          "UserEmail"
        ],
        "operationId": "UserEmail_Contact",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "message",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "groupId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/UserPhoneNumber/{userId}": {
      "get": {
        "tags": [
          "UserPhoneNumber"
        ],
        "operationId": "UserPhoneNumber_Get",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPhoneNumber"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      },
      "put": {
        "tags": [
          "UserPhoneNumber"
        ],
        "operationId": "UserPhoneNumber_Update",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserPhoneNumberSettings"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/UserPhoneNumber/{userId}/SendVerification": {
      "post": {
        "tags": [
          "UserPhoneNumber"
        ],
        "operationId": "UserPhoneNumber_SendVerification",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationRequestResult"
                }
              }
            }
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    },
    "/v1/UserPhoneNumber/Verify/{verificationCode}": {
      "post": {
        "tags": [
          "UserPhoneNumber"
        ],
        "operationId": "UserPhoneNumber_Verify",
        "parameters": [
          {
            "name": "verificationCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "You are not permitted to view this."
          },
          "403": {
            "description": "You are not permitted to view this."
          },
          "404": {
            "description": "This resource could not be found."
          },
          "503": {
            "description": "Service unavailable. Please try again later."
          },
          "504": {
            "description": "Request timed out. Please try again."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ListOfEmail": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Email"
            }
          }
        }
      },
      "Email": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/EmailType"
          },
          "from": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmailAddress"
              }
            ]
          },
          "to": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/EmailAddress"
            }
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "bodyHtml": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/EmailStatus"
          }
        }
      },
      "EmailType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "None",
          "EventInvite",
          "EventChanged",
          "ScheduledLink",
          "RequestSurvey",
          "AddedToGroup",
          "AddedToClass",
          "ModuleAttempt",
          "Authentication",
          "Confirm",
          "ContactUser",
          "PublishingRequested",
          "PublishingRequestApproved",
          "PublishingRequestRejected",
          "RequestResetPassword",
          "Welcome",
          "Support",
          "SupportConfirmation",
          "SupportStatusChanged",
          "RequestResetPasswordFailed"
        ],
        "enum": [
          "None",
          "EventInvite",
          "EventChanged",
          "ScheduledLink",
          "RequestSurvey",
          "AddedToGroup",
          "AddedToClass",
          "ModuleAttempt",
          "Authentication",
          "Confirm",
          "ContactUser",
          "PublishingRequested",
          "PublishingRequestApproved",
          "PublishingRequestRejected",
          "RequestResetPassword",
          "Welcome",
          "Support",
          "SupportConfirmation",
          "SupportStatusChanged",
          "RequestResetPasswordFailed"
        ]
      },
      "EmailAddress": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EmailStatus": {
        "type": "integer",
        "description": "0 = None\n1 = Submitted\n2 = Received\n3 = Read\n4 = Clicked\n5 = Spammed\n6 = Error",
        "x-enumNames": [
          "None",
          "Submitted",
          "Received",
          "Read",
          "Clicked",
          "Spammed",
          "Error"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      },
      "ListOfUserAttendance": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserAttendance"
            }
          }
        }
      },
      "UserAttendance": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Attendance"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "userId": {
                "type": "string",
                "nullable": true
              },
              "userName": {
                "type": "string",
                "nullable": true
              },
              "userImageUri": {
                "type": "string",
                "nullable": true
              },
              "userJobTypeId": {
                "type": "string",
                "nullable": true
              },
              "userJobTypeName": {
                "type": "string",
                "nullable": true
              },
              "userJobTypeCategory": {
                "type": "string",
                "nullable": true
              },
              "userQualifications": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "Attendance": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/AttendanceStatus"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AttendanceStatus": {
        "type": "integer",
        "description": "0 = None\n1 = Yes\n2 = No\n3 = Maybe",
        "x-enumNames": [
          "None",
          "Yes",
          "No",
          "Maybe"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "UpdateAttendanceSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "version"
        ],
        "properties": {
          "status": {
            "$ref": "#/components/schemas/AttendanceStatus"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListOfMeeting": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Meeting"
            }
          }
        }
      },
      "Meeting": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "parentId": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Location": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "coordinates": {
            "$ref": "#/components/schemas/Coordinates"
          }
        }
      },
      "Coordinates": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CreateMeetingSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "parentId",
          "name"
        ],
        "properties": {
          "parentId": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "location": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LocationBuilder"
              }
            ]
          },
          "files": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CreateFileSettings"
            }
          }
        }
      },
      "LocationBuilder": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CreateFileSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "dataUri"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "dataUri": {
            "type": "string",
            "maxLength": 68500000,
            "minLength": 0
          }
        }
      },
      "UpdateMeetingSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "version"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "location": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LocationBuilder"
              }
            ]
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "notify": {
            "type": "boolean"
          },
          "eventUri": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ListOfFile": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/File"
            }
          }
        }
      },
      "File": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "byteCount": {
            "type": "integer",
            "format": "int64"
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "extension": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "string",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "parentId": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateFileSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "version"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "dataUri": {
            "type": "string",
            "maxLength": 68500000,
            "minLength": 0,
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListOfGroupAttendance": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupAttendance"
            }
          }
        }
      },
      "GroupAttendance": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Attendance"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "groupName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ListOfBackup": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Backup"
            }
          }
        }
      },
      "Backup": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "started": {
            "type": "string",
            "format": "date-time"
          },
          "completed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/BackupStatus"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BackupStatus": {
        "type": "integer",
        "description": "0 = Running\n1 = Completed\n2 = Error",
        "x-enumNames": [
          "Running",
          "Completed",
          "Error"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "ListOfExternalApplication": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalApplication"
            }
          }
        }
      },
      "ExternalApplication": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "imageUri": {
            "type": "string",
            "nullable": true
          },
          "endpoint": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateExternalApplicationSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "imageUri": {
            "type": "string",
            "maxLength": 6850000,
            "minLength": 0,
            "nullable": true
          },
          "endpoint": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          }
        }
      },
      "UpdateExternalApplicationSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "version"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "imageUri": {
            "type": "string",
            "maxLength": 6850000,
            "minLength": 0,
            "nullable": true
          },
          "endpoint": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ResizedImage": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "uri": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListOfLog": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Log"
            }
          }
        }
      },
      "Log": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "context": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Platform": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "timeZoneId": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "$ref": "#/components/schemas/ApplicationVersion"
          },
          "compileConfiguration": {
            "type": "string",
            "nullable": true
          },
          "compileDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "reCaptchaSiteKey": {
            "type": "string",
            "nullable": true
          },
          "supportEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "systemEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "cultures": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Culture"
            }
          }
        }
      },
      "ApplicationVersion": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "major": {
            "type": "integer",
            "format": "int32"
          },
          "minor": {
            "type": "integer",
            "format": "int32"
          },
          "build": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Culture": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "datePattern": {
            "type": "string",
            "nullable": true
          },
          "shortDatePattern": {
            "type": "string",
            "nullable": true
          },
          "timePattern": {
            "type": "string",
            "nullable": true
          },
          "shortTimePattern": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PlatformStatus": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "$ref": "#/components/schemas/SystemStatus"
          },
          "buildingProgress": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "SystemStatus": {
        "type": "integer",
        "description": "0 = Built\n1 = Building\n2 = Maintenance\n-1 = Failed",
        "x-enumNames": [
          "Built",
          "Building",
          "Maintenance",
          "Failed"
        ],
        "enum": [
          0,
          1,
          2,
          -1
        ]
      },
      "ListOfProjectionBuild": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectionBuild"
            }
          }
        }
      },
      "ProjectionBuild": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventsProcessed": {
            "type": "integer",
            "format": "int32"
          },
          "estimatedTotalEvents": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/ProjectionStatus"
          }
        }
      },
      "ProjectionStatus": {
        "type": "integer",
        "description": "0 = Unknown\n1 = Pending\n2 = Running\n3 = Completed\n-1 = Failed",
        "x-enumNames": [
          "Unknown",
          "Pending",
          "Running",
          "Completed",
          "Failed"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          -1
        ]
      },
      "ListOfNotification": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notification"
            }
          }
        }
      },
      "Notification": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "recipientId": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "nullable": true
          },
          "seen": {
            "type": "boolean"
          },
          "read": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "string",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateNotificationSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "version"
        ],
        "properties": {
          "seen": {
            "type": "boolean"
          },
          "read": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListOfScheduledEmail": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduledEmail"
            }
          }
        }
      },
      "ScheduledEmail": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "externalApplicationId": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "string",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "organisationId": {
            "type": "string",
            "nullable": true
          },
          "timeZoneId": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "recipientIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "parameters": {
            "nullable": true
          },
          "schedule": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ScheduleOption"
              }
            ]
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ScheduleOption": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "repeatType": {
            "$ref": "#/components/schemas/RepeatType"
          },
          "repeatInterval": {
            "type": "integer",
            "format": "int32"
          },
          "repeatOn": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "RepeatType": {
        "type": "integer",
        "description": "0 = None\n1 = Daily\n2 = Weekly\n3 = MonthlyByDay\n4 = MonthlyByDayOfWeek\n5 = Yearly",
        "x-enumNames": [
          "None",
          "Daily",
          "Weekly",
          "MonthlyByDay",
          "MonthlyByDayOfWeek",
          "Yearly"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ]
      },
      "CreateScheduledEmailSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "groupId",
          "schedule",
          "parameters"
        ],
        "properties": {
          "type": {
            "type": "string",
            "minLength": 1
          },
          "title": {
            "type": "string",
            "maxLength": 120,
            "minLength": 0,
            "nullable": true
          },
          "note": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 0,
            "nullable": true
          },
          "groupId": {
            "type": "string",
            "minLength": 1
          },
          "schedule": {
            "$ref": "#/components/schemas/ScheduleOption"
          },
          "recipientIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "externalApplicationId": {
            "type": "string",
            "nullable": true
          },
          "parameters": {}
        }
      },
      "UpdateScheduledEmailSettings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 120,
            "minLength": 0,
            "nullable": true
          },
          "note": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 0,
            "nullable": true
          },
          "schedule": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ScheduleOption"
              }
            ]
          },
          "recipientIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "externalApplicationId": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListOfObservationContent": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObservationContent"
            }
          }
        }
      },
      "ObservationContent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "publisherId": {
            "type": "string",
            "nullable": true
          },
          "definitionId": {
            "type": "string",
            "nullable": true
          },
          "questions": {
            "type": "array",
            "nullable": true,
            "items": {}
          },
          "published": {
            "type": "boolean"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateObservationContentSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "definitionId",
          "questions"
        ],
        "properties": {
          "definitionId": {
            "type": "string",
            "minLength": 1
          },
          "questions": {
            "type": "array",
            "items": {}
          },
          "published": {
            "type": "boolean"
          }
        }
      },
      "UpdateObservationContentSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "questions"
        ],
        "properties": {
          "questions": {
            "type": "array",
            "items": {}
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListOfLocatableObservation": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocatableObservation"
            }
          }
        }
      },
      "LocatableObservation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Observation"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "coordinates": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Coordinates"
                  }
                ]
              }
            }
          }
        ]
      },
      "Observation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "performed": {
            "type": "string",
            "format": "date-time"
          },
          "answers": {
            "type": "array",
            "nullable": true,
            "items": {}
          },
          "groupId": {
            "type": "string",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "groupType": {
            "type": "string",
            "nullable": true
          },
          "organisationId": {
            "type": "string",
            "nullable": true
          },
          "observerId": {
            "type": "string",
            "nullable": true
          },
          "observerName": {
            "type": "string",
            "nullable": true
          },
          "definitionId": {
            "type": "string",
            "nullable": true
          },
          "publisherId": {
            "type": "string",
            "nullable": true
          },
          "contentId": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ObservationAreaOptions": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PageOptions"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "southWest": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CoordinatesBuilder"
                  }
                ]
              },
              "northEast": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CoordinatesBuilder"
                  }
                ]
              },
              "friendly": {
                "type": "boolean",
                "nullable": true
              }
            }
          }
        ]
      },
      "CoordinatesBuilder": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "PageOptions": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "skip": {
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 0.0
          },
          "take": {
            "type": "integer",
            "description": "The number (0 - 1000 inclusive) of items to get from the API.",
            "format": "int32",
            "maximum": 1000.0,
            "minimum": 0.0
          }
        }
      },
      "ListOfObservation": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Observation"
            }
          }
        }
      },
      "CreateObservationSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "contentId",
          "groupId"
        ],
        "properties": {
          "contentId": {
            "type": "string",
            "minLength": 1
          },
          "groupId": {
            "type": "string",
            "minLength": 1
          },
          "observerId": {
            "type": "string",
            "nullable": true
          },
          "answers": {
            "type": "array",
            "nullable": true,
            "items": {}
          },
          "performed": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UpdateObservationSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "version"
        ],
        "properties": {
          "observerId": {
            "type": "string",
            "nullable": true
          },
          "answers": {
            "type": "array",
            "nullable": true,
            "items": {}
          },
          "performed": {
            "type": "string",
            "format": "date-time"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PredictObservationSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "dataUri"
        ],
        "properties": {
          "dataUri": {
            "type": "string",
            "maxLength": 68500000,
            "minLength": 0
          }
        }
      },
      "ListOfObservationDefinition": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObservationDefinition"
            }
          }
        }
      },
      "ObservationDefinition": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "publisherId": {
            "type": "string",
            "nullable": true
          },
          "publisherName": {
            "type": "string",
            "nullable": true
          },
          "published": {
            "type": "boolean"
          },
          "publishedContentId": {
            "type": "string",
            "nullable": true
          },
          "programs": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProgramInObservationDefinition"
            }
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProgramInObservationDefinition": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateObservationDefinitionSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "publisherId",
          "name",
          "description"
        ],
        "properties": {
          "publisherId": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0
          }
        }
      },
      "UpdateObservationDefinitionSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "description",
          "version"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListOfObservationForm": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObservationForm"
            }
          }
        }
      },
      "ObservationForm": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "publisherId": {
            "type": "string",
            "nullable": true
          },
          "definitionId": {
            "type": "string",
            "nullable": true
          },
          "contentId": {
            "type": "string",
            "nullable": true
          },
          "fileQuestionIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelId": {
            "type": "string",
            "nullable": true
          },
          "modelVersion": {
            "type": "string",
            "nullable": true
          },
          "widthMillimetres": {
            "type": "integer",
            "format": "int32"
          },
          "heightMillimetres": {
            "type": "integer",
            "format": "int32"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateObservationFormSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "contentId",
          "modelId",
          "modelVersion"
        ],
        "properties": {
          "contentId": {
            "type": "string",
            "minLength": 1
          },
          "fileQuestionIndex": {
            "type": "integer",
            "description": "The index of the file question in the target observation content\nthat will be used to store the OCR image.",
            "format": "int32",
            "nullable": true
          },
          "modelId": {
            "type": "string",
            "description": "ID of the ML training model.",
            "minLength": 1
          },
          "modelVersion": {
            "type": "string",
            "description": "Version of the ML training model.",
            "minLength": 1
          },
          "widthMillimetres": {
            "type": "integer",
            "format": "int32"
          },
          "heightMillimetres": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateObservationFormSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "modelId",
          "modelVersion"
        ],
        "properties": {
          "fileQuestionIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelId": {
            "type": "string",
            "minLength": 1
          },
          "modelVersion": {
            "type": "string",
            "minLength": 1
          },
          "widthMillimetres": {
            "type": "integer",
            "format": "int32"
          },
          "heightMillimetres": {
            "type": "integer",
            "format": "int32"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MigrateObservationDefinitionSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "publisherId",
          "version"
        ],
        "properties": {
          "publisherId": {
            "type": "string",
            "minLength": 1
          },
          "version": {
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0
          }
        }
      },
      "DuplicateObservationDefinitionSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "description",
          "consumerIds"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0
          },
          "consumerIds": {
            "type": "array",
            "description": "List of consumers to be migrated with the new observation definition.",
            "minItems": 1,
            "items": {
              "type": "string"
            }
          },
          "dryRun": {
            "type": "boolean"
          }
        }
      },
      "BatchMergeObservationAnonymousUsersSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "definitionId",
          "groupId",
          "anonymousUsers",
          "userId"
        ],
        "properties": {
          "definitionId": {
            "type": "string",
            "minLength": 1
          },
          "groupId": {
            "type": "string",
            "minLength": 1
          },
          "anonymousUsers": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string"
            }
          },
          "userId": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "ListOfObservationSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObservationSettings"
            }
          }
        }
      },
      "ObservationSettings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "organisationId": {
            "type": "string",
            "nullable": true
          },
          "definitionId": {
            "type": "string",
            "nullable": true
          },
          "publisherId": {
            "type": "string",
            "nullable": true
          },
          "privacy": {
            "$ref": "#/components/schemas/PrivacyLevel"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PrivacyLevel": {
        "type": "integer",
        "description": "0 = Public\n1 = Closed\n2 = Secret",
        "x-enumNames": [
          "Public",
          "Closed",
          "Secret"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "CreateObservationSettingsSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "organisationId",
          "definitionId"
        ],
        "properties": {
          "organisationId": {
            "type": "string",
            "minLength": 1
          },
          "definitionId": {
            "type": "string",
            "minLength": 1
          },
          "privacy": {
            "$ref": "#/components/schemas/PrivacyLevel"
          }
        }
      },
      "UpdateObservationSettingsSettings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "privacy": {
            "$ref": "#/components/schemas/PrivacyLevel"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Customer": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Merchant": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "publisherId": {
            "type": "string",
            "nullable": true
          },
          "verified": {
            "type": "boolean"
          }
        }
      },
      "Payment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "publisherId": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "string",
            "nullable": true
          },
          "productId": {
            "type": "string",
            "nullable": true
          },
          "itemId": {
            "type": "string",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "merchantAmount": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/PaymentStatus"
          }
        }
      },
      "PaymentStatus": {
        "type": "integer",
        "description": "0 = None\n1 = Pending\n2 = Succeeded\n3 = Failed\n4 = Refunded",
        "x-enumNames": [
          "None",
          "Pending",
          "Succeeded",
          "Failed",
          "Refunded"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4
        ]
      },
      "CreatePaymentSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "productId",
          "token"
        ],
        "properties": {
          "productId": {
            "type": "string",
            "minLength": 1
          },
          "token": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "Region": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "countries": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Country"
            }
          }
        }
      },
      "Country": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "currencies": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Currency"
            }
          }
        }
      },
      "Currency": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "symbol": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Product": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "itemName": {
            "type": "string",
            "nullable": true
          },
          "itemType": {
            "type": "string",
            "nullable": true
          },
          "itemDescription": {
            "type": "string",
            "nullable": true
          },
          "publisherId": {
            "type": "string",
            "nullable": true
          },
          "publisherName": {
            "type": "string",
            "nullable": true
          },
          "publisherApproved": {
            "type": "boolean"
          },
          "programId": {
            "type": "string",
            "nullable": true
          },
          "programName": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "string",
            "nullable": true
          },
          "itemId": {
            "type": "string",
            "nullable": true
          },
          "prices": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "published": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Price": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateProductSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "publisherId",
          "itemId"
        ],
        "properties": {
          "publisherId": {
            "type": "string",
            "minLength": 1
          },
          "itemId": {
            "type": "string",
            "minLength": 1
          },
          "published": {
            "type": "boolean"
          },
          "prices": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          }
        }
      },
      "UpdateProductSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "version"
        ],
        "properties": {
          "prices": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "published": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListOfPublisher": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Publisher"
            }
          }
        }
      },
      "Publisher": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "requested": {
            "type": "boolean"
          },
          "request": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PublishingOptions"
              }
            ]
          },
          "approved": {
            "type": "boolean"
          },
          "publishing": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PublishingOptions"
              }
            ]
          }
        }
      },
      "PublishingOptions": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "freeBusinessToConsumer": {
            "type": "boolean"
          },
          "paidBusinessToConsumer": {
            "type": "boolean"
          },
          "businessToBusiness": {
            "type": "boolean"
          }
        }
      },
      "RequestPublisherSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "options"
        ],
        "properties": {
          "options": {
            "$ref": "#/components/schemas/PublishingOptions"
          },
          "notes": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "approvalUri": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ApprovePublisherSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "options"
        ],
        "properties": {
          "options": {
            "$ref": "#/components/schemas/PublishingOptions"
          },
          "notes": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "publishingUri": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ListOfImplementation": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Implementation"
            }
          }
        }
      },
      "Implementation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "templateId": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "string",
            "nullable": true
          },
          "publisherId": {
            "type": "string",
            "nullable": true
          },
          "publisherName": {
            "type": "string",
            "nullable": true
          },
          "publisherLogoUri": {
            "type": "string",
            "nullable": true
          },
          "consumerId": {
            "type": "string",
            "nullable": true
          },
          "consumerName": {
            "type": "string",
            "nullable": true
          },
          "consumerLogoUri": {
            "type": "string",
            "nullable": true
          },
          "teamId": {
            "type": "string",
            "nullable": true
          },
          "teamName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "archived": {
            "type": "boolean"
          },
          "phases": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PhaseInImplementation"
            }
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PhaseInImplementation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "tasks": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TaskInImplementation"
            }
          }
        }
      },
      "TaskInImplementation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          }
        }
      },
      "TaskStatus": {
        "type": "integer",
        "description": "0 = None\n1 = NotStarted\n2 = Started\n3 = Complete\n4 = Rejected",
        "x-enumNames": [
          "None",
          "NotStarted",
          "Started",
          "Complete",
          "Rejected"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4
        ]
      },
      "ListOfTask": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          }
        }
      },
      "Task": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "string",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "creatorImageUri": {
            "type": "string",
            "nullable": true
          },
          "templateId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "estimatedDuration": {
            "type": "string",
            "format": "time-span"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "due": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "subtasks": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SubtaskInTask"
            }
          },
          "assignees": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AssigneeInTask"
            }
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SubtaskInTask": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "estimatedDuration": {
            "type": "string",
            "format": "time-span"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "due": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "AssigneeInTask": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "imageUri": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateImplementationSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "publisherId",
          "name"
        ],
        "properties": {
          "publisherId": {
            "type": "string",
            "minLength": 1
          },
          "templateId": {
            "type": "string",
            "nullable": true
          },
          "consumerId": {
            "type": "string",
            "nullable": true
          },
          "teamId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "phases": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ImplementationPhase"
            }
          }
        }
      },
      "ImplementationPhase": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "tasks": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PhaseTask"
            }
          }
        }
      },
      "PhaseTask": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateImplementationSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "phases": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ImplementationPhase"
            }
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "archived": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListOfItemActivation": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemActivation"
            }
          }
        }
      },
      "ItemActivation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "itemId": {
            "type": "string",
            "nullable": true
          },
          "itemType": {
            "type": "string",
            "nullable": true
          },
          "itemName": {
            "type": "string",
            "nullable": true
          },
          "programs": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProgramInItemActivation"
            }
          },
          "publisherId": {
            "type": "string",
            "nullable": true
          },
          "publisherName": {
            "type": "string",
            "nullable": true
          },
          "consumerOrganisationId": {
            "type": "string",
            "nullable": true
          },
          "consumerType": {
            "type": "string",
            "nullable": true
          },
          "consumerId": {
            "type": "string",
            "nullable": true
          },
          "consumerName": {
            "type": "string",
            "nullable": true
          },
          "activated": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ProgramInItemActivation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ListOfProgramActivation": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgramActivation"
            }
          }
        }
      },
      "ProgramActivation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "programId": {
            "type": "string",
            "nullable": true
          },
          "consumerType": {
            "type": "string",
            "nullable": true
          },
          "consumerId": {
            "type": "string",
            "nullable": true
          },
          "consumerName": {
            "type": "string",
            "nullable": true
          },
          "launchedAt": {
            "type": "string",
            "format": "date-time"
          },
          "sponsor": {
            "type": "string",
            "nullable": true
          },
          "currentPhaseId": {
            "type": "string",
            "nullable": true
          },
          "phaseActivations": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PhaseActivationInProgramActivation"
            }
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PhaseActivationInProgramActivation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ProgramPhaseActivationStatus"
          }
        }
      },
      "ProgramPhaseActivationStatus": {
        "type": "integer",
        "description": "0 = NotActivated\n1 = Requested\n2 = Activated\n3 = Deactivated",
        "x-enumNames": [
          "NotActivated",
          "Requested",
          "Activated",
          "Deactivated"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "ActivateProgramPhaseSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "consumerId",
          "programPhaseId"
        ],
        "properties": {
          "consumerId": {
            "type": "string",
            "minLength": 1
          },
          "programPhaseId": {
            "type": "string",
            "minLength": 1
          },
          "sponsor": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0,
            "nullable": true
          }
        }
      },
      "ListOfProgram": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Program"
            }
          }
        }
      },
      "Program": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "logoUri": {
            "type": "string",
            "nullable": true
          },
          "bannerUri": {
            "type": "string",
            "nullable": true
          },
          "publisherId": {
            "type": "string",
            "nullable": true
          },
          "publisherName": {
            "type": "string",
            "nullable": true
          },
          "publisherLogoUri": {
            "type": "string",
            "nullable": true
          },
          "resources": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProgramResource"
            }
          },
          "phases": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProgramPhaseInProgram"
            }
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProgramResource": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/ProgramResourceType"
          }
        }
      },
      "ProgramResourceType": {
        "type": "integer",
        "description": "0 = Course\n1 = ObservationDefinition\n2 = Survey\n3 = Implementation",
        "x-enumNames": [
          "Course",
          "ObservationDefinition",
          "Survey",
          "Implementation"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "ProgramPhaseInProgram": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "resources": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProgramResource"
            }
          }
        }
      },
      "CreateProgramSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "publisherId",
          "name"
        ],
        "properties": {
          "publisherId": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "bannerUri": {
            "type": "string",
            "maxLength": 6850000,
            "minLength": 0,
            "nullable": true
          },
          "logoUri": {
            "type": "string",
            "maxLength": 6850000,
            "minLength": 0,
            "nullable": true
          },
          "resources": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProgramResource"
            }
          }
        }
      },
      "UpdateProgramSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "bannerUri": {
            "type": "string",
            "maxLength": 6850000,
            "minLength": 0,
            "nullable": true
          },
          "logoUri": {
            "type": "string",
            "maxLength": 6850000,
            "minLength": 0,
            "nullable": true
          },
          "resources": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProgramResource"
            }
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProgramPhase": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "publisherId": {
            "type": "string",
            "nullable": true
          },
          "publisherName": {
            "type": "string",
            "nullable": true
          },
          "publisherLogoUri": {
            "type": "string",
            "nullable": true
          },
          "programId": {
            "type": "string",
            "nullable": true
          },
          "programName": {
            "type": "string",
            "nullable": true
          },
          "programLogoUri": {
            "type": "string",
            "nullable": true
          },
          "programBannerUri": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "resources": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProgramResource"
            }
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateProgramPhaseSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "programId",
          "name"
        ],
        "properties": {
          "programId": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "resources": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProgramResource"
            }
          }
        }
      },
      "UpdateProgramPhaseSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "resources": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProgramResource"
            }
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListOfComment": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          }
        }
      },
      "Comment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "rootId": {
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "string",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "creatorImageUri": {
            "type": "string",
            "nullable": true
          },
          "creatorJobTypeId": {
            "type": "string",
            "nullable": true
          },
          "creatorJobTypeName": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modifierId": {
            "type": "string",
            "nullable": true
          },
          "modifierName": {
            "type": "string",
            "nullable": true
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "replyCount": {
            "type": "integer",
            "format": "int32"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateCommentSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "content"
        ],
        "properties": {
          "parentId": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0
          }
        }
      },
      "UpdateCommentSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "content"
        ],
        "properties": {
          "content": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateTaskSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "groupId",
          "name"
        ],
        "properties": {
          "groupId": {
            "type": "string",
            "minLength": 1
          },
          "templateId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "estimatedDuration": {
            "type": "string",
            "format": "time-span"
          },
          "due": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "subtasks": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TaskSubtask"
            }
          },
          "assigneeIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TaskSubtask": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateTaskSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "estimatedDuration": {
            "type": "string",
            "format": "time-span"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "due": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "subtasks": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TaskSubtask"
            }
          },
          "assigneeIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Sharing": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "aliasId": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/SharingType"
          },
          "payload": {
            "nullable": true
          },
          "creatorId": {
            "type": "string",
            "nullable": true
          },
          "creatorType": {
            "$ref": "#/components/schemas/IdentityType"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          },
          "disabled": {
            "type": "boolean"
          }
        }
      },
      "SharingType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "GroupInvitation"
        ],
        "enum": [
          "GroupInvitation"
        ]
      },
      "IdentityType": {
        "type": "integer",
        "description": "0 = None\n1 = User\n2 = Organisation",
        "x-enumNames": [
          "None",
          "User",
          "Organisation"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "ListOfSharing": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sharing"
            }
          }
        }
      },
      "CreateGroupInvitationSharingSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateSharingSettingsBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "groupId"
            ],
            "properties": {
              "groupId": {
                "type": "string",
                "minLength": 1
              },
              "roles": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "CreateSharingSettingsBase": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "aliasId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 4,
            "nullable": true
          },
          "note": {
            "type": "string",
            "maxLength": 32,
            "nullable": true
          },
          "duration": {
            "type": "string",
            "format": "time-span",
            "nullable": true
          }
        }
      },
      "ListOfTicket": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ticket"
            }
          }
        }
      },
      "Ticket": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "ticketType": {
            "$ref": "#/components/schemas/TicketType"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "userEmail": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/TicketStatus"
          },
          "statusReason": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TicketType": {
        "type": "integer",
        "description": "0 = None\n1 = GeneralEnquiry",
        "x-enumNames": [
          "None",
          "GeneralEnquiry"
        ],
        "enum": [
          0,
          1
        ]
      },
      "TicketStatus": {
        "type": "integer",
        "description": "0 = Open\n1 = Resolved\n2 = Rejected",
        "x-enumNames": [
          "Open",
          "Resolved",
          "Rejected"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "CreateTicketSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "userEmail",
          "userName",
          "message"
        ],
        "properties": {
          "userEmail": {
            "type": "string",
            "format": "email",
            "minLength": 1
          },
          "userName": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "message": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0
          },
          "type": {
            "$ref": "#/components/schemas/TicketType"
          }
        }
      },
      "UpdateTicketSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "version"
        ],
        "properties": {
          "status": {
            "$ref": "#/components/schemas/TicketStatus"
          },
          "reason": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListOfSurveyContent": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyContent"
            }
          }
        }
      },
      "SurveyContent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "publisherId": {
            "type": "string",
            "nullable": true
          },
          "surveyId": {
            "type": "string",
            "nullable": true
          },
          "sections": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/QuestionSection"
            }
          },
          "published": {
            "type": "boolean"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "QuestionSection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "questions": {
            "type": "array",
            "nullable": true,
            "items": {}
          }
        }
      },
      "CreateSurveyContentSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "sections"
        ],
        "properties": {
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionSection"
            }
          },
          "published": {
            "type": "boolean"
          }
        }
      },
      "UpdateSurveyContentSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "sections"
        ],
        "properties": {
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionSection"
            }
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SurveyQuestionTypes": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "listQuestion": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListQuestion"
              }
            ]
          },
          "compositeQuestion": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CompositeQuestion"
              }
            ]
          },
          "decimalQuestion": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalQuestion"
              }
            ]
          },
          "integerQuestion": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntegerQuestion"
              }
            ]
          },
          "multipleChoiceQuestion": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MultipleChoiceQuestion"
              }
            ]
          },
          "stringQuestion": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringQuestion"
              }
            ]
          },
          "percentageQuestion": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PercentageQuestion"
              }
            ]
          },
          "dateTimeQuestion": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeQuestion"
              }
            ]
          },
          "timeSpanQuestion": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TimeSpanQuestion"
              }
            ]
          },
          "userQuestion": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserQuestion"
              }
            ]
          },
          "groupQuestion": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/GroupQuestion"
              }
            ]
          },
          "fileQuestion": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FileQuestion"
              }
            ]
          },
          "binaryQuestion": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BinaryQuestion"
              }
            ]
          },
          "timeOfDayQuestion": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TimeOfDayQuestion"
              }
            ]
          },
          "emailQuestion": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmailQuestion"
              }
            ]
          },
          "labelQuestion": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LabelQuestion"
              }
            ]
          }
        }
      },
      "ListQuestion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QuestionBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "layout": {
                "$ref": "#/components/schemas/LayoutType"
              },
              "question": {
                "nullable": true
              },
              "minimumAnswers": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "maximumAnswers": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ]
      },
      "LayoutType": {
        "type": "integer",
        "description": "0 = None\n1 = Horizontal\n2 = Vertical",
        "x-enumNames": [
          "None",
          "Horizontal",
          "Vertical"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "QuestionBase": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "required": {
            "type": "boolean"
          }
        }
      },
      "CompositeQuestion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QuestionBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "layout": {
                "$ref": "#/components/schemas/LayoutType"
              },
              "questions": {
                "type": "array",
                "nullable": true,
                "items": {}
              }
            }
          }
        ]
      },
      "DecimalQuestion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QuestionBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "minimum": {
                "type": "number",
                "format": "double",
                "nullable": true
              },
              "maximum": {
                "type": "number",
                "format": "double",
                "nullable": true
              }
            }
          }
        ]
      },
      "IntegerQuestion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QuestionBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "display": {
                "$ref": "#/components/schemas/IntegerQuestionDisplayType"
              },
              "minimum": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "maximum": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ]
      },
      "IntegerQuestionDisplayType": {
        "type": "integer",
        "description": "0 = None\n1 = Counter",
        "x-enumNames": [
          "None",
          "Counter"
        ],
        "enum": [
          0,
          1
        ]
      },
      "MultipleChoiceQuestion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QuestionBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "options": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "minimumResponses": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "maximumResponses": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ]
      },
      "StringQuestion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QuestionBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "lineType": {
                "$ref": "#/components/schemas/LineType"
              },
              "minimumLength": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "maximumLength": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ]
      },
      "LineType": {
        "type": "integer",
        "description": "0 = None\n1 = SingleLine\n2 = MultiLine",
        "x-enumNames": [
          "None",
          "SingleLine",
          "MultiLine"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "PercentageQuestion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QuestionBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "minimum": {
                "type": "number",
                "format": "double",
                "nullable": true
              },
              "maximum": {
                "type": "number",
                "format": "double",
                "nullable": true
              }
            }
          }
        ]
      },
      "DateTimeQuestion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QuestionBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "constraint": {
                "$ref": "#/components/schemas/DateTimeConstraintType"
              },
              "minimum": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "maximum": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ]
      },
      "DateTimeConstraintType": {
        "type": "integer",
        "description": "0 = None\n1 = Date",
        "x-enumNames": [
          "None",
          "Date"
        ],
        "enum": [
          0,
          1
        ]
      },
      "TimeSpanQuestion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QuestionBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "constraint": {
                "$ref": "#/components/schemas/TimeSpanConstraintType"
              },
              "minimum": {
                "type": "string",
                "format": "time-span",
                "nullable": true
              },
              "maximum": {
                "type": "string",
                "format": "time-span",
                "nullable": true
              }
            }
          }
        ]
      },
      "TimeSpanConstraintType": {
        "type": "integer",
        "description": "0 = None\n1 = Days\n2 = Hours\n3 = Minutes\n4 = Seconds",
        "x-enumNames": [
          "None",
          "Days",
          "Hours",
          "Minutes",
          "Seconds"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4
        ]
      },
      "UserQuestion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QuestionBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "jobTypeCategories": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "jobTypeIds": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "GroupQuestion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QuestionBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "groupType": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "FileQuestion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QuestionBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "contentTypes": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "BinaryQuestion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QuestionBase"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "TimeOfDayQuestion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QuestionBase"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "EmailQuestion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QuestionBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "constraint": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/DomainConstraint"
                  }
                ]
              }
            }
          }
        ]
      },
      "DomainConstraint": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DomainConstraintType"
          },
          "domains": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "DomainConstraintType": {
        "type": "integer",
        "description": "0 = Black\n1 = White",
        "x-enumNames": [
          "Black",
          "White"
        ],
        "enum": [
          0,
          1
        ]
      },
      "LabelQuestion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QuestionBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "minimumResponses": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "maximumResponses": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ]
      },
      "SurveyAnswerTypes": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "listAnswer": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListAnswer"
              }
            ]
          },
          "compositeAnswer": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CompositeAnswer"
              }
            ]
          },
          "decimalAnswer": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalAnswer"
              }
            ]
          },
          "integerAnswer": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntegerAnswer"
              }
            ]
          },
          "multipleChoiceAnswer": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MultipleChoiceAnswer"
              }
            ]
          },
          "stringAnswer": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringAnswer"
              }
            ]
          },
          "percentageAnswer": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PercentageAnswer"
              }
            ]
          },
          "dateTimeAnswer": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeAnswer"
              }
            ]
          },
          "timeSpanAnswer": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TimeSpanAnswer"
              }
            ]
          },
          "userAnswer": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserAnswer"
              }
            ]
          },
          "groupAnswer": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/GroupAnswer"
              }
            ]
          },
          "fileAnswer": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FileAnswer"
              }
            ]
          },
          "binaryAnswer": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BinaryAnswer"
              }
            ]
          },
          "timeOfDayAnswer": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TimeOfDayAnswer"
              }
            ]
          },
          "emailAnswer": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmailAnswer"
              }
            ]
          },
          "labelAnswer": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LabelAnswer"
              }
            ]
          }
        }
      },
      "ListAnswer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AnswerBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "answers": {
                "type": "array",
                "nullable": true,
                "items": {}
              }
            }
          }
        ]
      },
      "AnswerBase": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "questionIndex": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CompositeAnswer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AnswerBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "answers": {
                "type": "array",
                "nullable": true,
                "items": {}
              }
            }
          }
        ]
      },
      "DecimalAnswer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AnswerBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "nullable": true
              }
            }
          }
        ]
      },
      "IntegerAnswer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AnswerBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "value": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ]
      },
      "MultipleChoiceAnswer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AnswerBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "options": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ]
      },
      "StringAnswer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AnswerBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "value": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "PercentageAnswer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AnswerBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "nullable": true
              }
            }
          }
        ]
      },
      "DateTimeAnswer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AnswerBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "value": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ]
      },
      "TimeSpanAnswer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AnswerBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "value": {
                "type": "string",
                "format": "time-span",
                "nullable": true
              }
            }
          }
        ]
      },
      "UserAnswer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AnswerBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "valueType": {
                "$ref": "#/components/schemas/UserValueType"
              },
              "value": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "UserValueType": {
        "type": "integer",
        "description": "0 = Id\n1 = Name",
        "x-enumNames": [
          "Id",
          "Name"
        ],
        "enum": [
          0,
          1
        ]
      },
      "GroupAnswer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AnswerBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "groupId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "FileAnswer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AnswerBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "uri": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BinaryAnswer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AnswerBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "TimeOfDayAnswer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AnswerBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "value": {
                "type": "string",
                "format": "time-span",
                "nullable": true
              }
            }
          }
        ]
      },
      "EmailAnswer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AnswerBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "value": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "LabelAnswer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AnswerBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "answers": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "SurveySettings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sections": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/QuestionSection"
            }
          }
        }
      },
      "ListOfSurvey": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Survey"
            }
          }
        }
      },
      "Survey": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "publisherId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isPublic": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "publishedContentId": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateSurveySettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "publisherId",
          "name"
        ],
        "properties": {
          "publisherId": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "isPublic": {
            "type": "boolean"
          }
        }
      },
      "UpdateSurveySettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "isPublic": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListOfSurveyRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyRequest"
            }
          }
        }
      },
      "SurveyRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "surveyId": {
            "type": "string",
            "nullable": true
          },
          "surveyName": {
            "type": "string",
            "nullable": true
          },
          "surveyPublisherId": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "string",
            "nullable": true
          },
          "respondentId": {
            "type": "string",
            "nullable": true
          },
          "respondentName": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "string",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Token": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateSurveyRequestSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "surveyId",
          "groupId",
          "respondentId"
        ],
        "properties": {
          "surveyId": {
            "type": "string",
            "minLength": 1
          },
          "groupId": {
            "type": "string",
            "minLength": 1
          },
          "respondentId": {
            "type": "string",
            "minLength": 1
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ListOfSurveyResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyResponse"
            }
          }
        }
      },
      "SurveyResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "surveyId": {
            "type": "string",
            "nullable": true
          },
          "surveyName": {
            "type": "string",
            "nullable": true
          },
          "surveyPublisherId": {
            "type": "string",
            "nullable": true
          },
          "surveyContentId": {
            "type": "string",
            "nullable": true
          },
          "surveyRequestId": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "string",
            "nullable": true
          },
          "parentGroupIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "respondentId": {
            "type": "string",
            "nullable": true
          },
          "respondentName": {
            "type": "string",
            "nullable": true
          },
          "respondentIPAddress": {
            "type": "string",
            "nullable": true
          },
          "respondentUserAgent": {
            "type": "string",
            "nullable": true
          },
          "respondentJobTypeId": {
            "type": "string",
            "nullable": true
          },
          "sections": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AnswerSection"
            }
          },
          "started": {
            "type": "string",
            "format": "date-time"
          },
          "submitted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AnswerSection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sectionIndex": {
            "type": "integer",
            "format": "int32"
          },
          "answers": {
            "type": "array",
            "nullable": true,
            "items": {}
          }
        }
      },
      "CreateSurveyResponseSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "surveyContentId",
          "groupId"
        ],
        "properties": {
          "surveyContentId": {
            "type": "string",
            "minLength": 1
          },
          "groupId": {
            "type": "string",
            "minLength": 1
          },
          "surveyRequestId": {
            "type": "string",
            "nullable": true
          },
          "sections": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AnswerSection"
            }
          },
          "submitted": {
            "type": "boolean"
          }
        }
      },
      "UpdateSurveyResponseSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "version"
        ],
        "properties": {
          "sections": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AnswerSection"
            }
          },
          "submitted": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Actor": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "imageUri": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/ActorType"
          }
        }
      },
      "ActorType": {
        "type": "integer",
        "description": "0 = None\n1 = User\n2 = TrainingSession\n3 = Team",
        "x-enumNames": [
          "None",
          "User",
          "TrainingSession",
          "Team"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "ListOfModuleAttemptOfBookResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleAttemptOfBookResult"
            }
          }
        }
      },
      "ModuleAttemptOfBookResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModuleAttempt"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "result": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/BookResult"
                  }
                ]
              }
            }
          }
        ]
      },
      "BookResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "bookmark": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Bookmark"
              }
            ]
          },
          "maxBookmark": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Bookmark"
              }
            ]
          }
        }
      },
      "Bookmark": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "percentage": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ModuleAttempt": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "actorId": {
            "type": "string",
            "nullable": true
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType"
          },
          "actorName": {
            "type": "string",
            "nullable": true
          },
          "actorImageUri": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "string",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "publisherId": {
            "type": "string",
            "nullable": true
          },
          "publisherName": {
            "type": "string",
            "nullable": true
          },
          "publisherLogoUri": {
            "type": "string",
            "nullable": true
          },
          "moduleId": {
            "type": "string",
            "nullable": true
          },
          "moduleName": {
            "type": "string",
            "nullable": true
          },
          "moduleContentId": {
            "type": "string",
            "nullable": true
          },
          "moduleType": {
            "type": "string",
            "nullable": true
          },
          "result": {
            "nullable": true
          },
          "calculatedResult": {
            "$ref": "#/components/schemas/CalculatedModuleResult"
          },
          "classIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "trainingSessionId": {
            "type": "string",
            "nullable": true
          },
          "trainingSessionModuleAttemptId": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "passed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CalculatedModuleResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "passed": {
            "type": "boolean"
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "score": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateModuleAttemptSettingsOfBookResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "actorId",
          "moduleContentId",
          "result"
        ],
        "properties": {
          "actorId": {
            "type": "string",
            "description": "Id of the actor of ActorType being assessed",
            "minLength": 1
          },
          "moduleContentId": {
            "type": "string",
            "minLength": 1
          },
          "result": {
            "$ref": "#/components/schemas/BookResult"
          }
        }
      },
      "UpdateModuleAttemptSettingsOfBookResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "$ref": "#/components/schemas/BookResult"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListOfModuleContentOfBookSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleContentOfBookSettings"
            }
          }
        }
      },
      "ModuleContentOfBookSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModuleContent"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "settings": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/BookSettings"
                  }
                ]
              }
            }
          }
        ]
      },
      "BookSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "chapters"
        ],
        "properties": {
          "chapters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Chapter"
            }
          }
        }
      },
      "Chapter": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "slides": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ModuleContent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "publisherId": {
            "type": "string",
            "nullable": true
          },
          "moduleId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "nullable": true
          },
          "published": {
            "type": "boolean"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateModuleContentSettingsOfBookSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModuleContentSettingsOfBookSettings"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "published": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "ModuleContentSettingsOfBookSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "settings"
        ],
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/BookSettings"
          },
          "files": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ModuleContentFileSettings"
            }
          }
        }
      },
      "ModuleContentFileSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "dataUri"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "dataUri": {
            "type": "string",
            "maxLength": 68500000,
            "minLength": 0
          }
        }
      },
      "UpdateModuleContentSettingsOfBookSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModuleContentSettingsOfBookSettings"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "version": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "ListOfCertificate": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Certificate"
            }
          }
        }
      },
      "Certificate": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "logoUri": {
            "type": "string",
            "nullable": true
          },
          "publisherId": {
            "type": "string",
            "nullable": true
          },
          "publisherName": {
            "type": "string",
            "nullable": true
          },
          "publisherLogoUri": {
            "type": "string",
            "nullable": true
          },
          "validityPeriod": {
            "type": "string",
            "format": "time-span"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateCertificateSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "publisherId",
          "name"
        ],
        "properties": {
          "publisherId": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "logoUri": {
            "type": "string",
            "maxLength": 6850000,
            "minLength": 0,
            "nullable": true
          },
          "validityPeriod": {
            "type": "string",
            "format": "time-span"
          }
        }
      },
      "UpdateCertificateSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "logoUri": {
            "type": "string",
            "maxLength": 6850000,
            "minLength": 0,
            "nullable": true
          },
          "validityPeriod": {
            "type": "string",
            "format": "time-span"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListOfCertification": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Certification"
            }
          }
        }
      },
      "Certification": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "certificateId": {
            "type": "string",
            "nullable": true
          },
          "certificateName": {
            "type": "string",
            "nullable": true
          },
          "certificateLogoUri": {
            "type": "string",
            "nullable": true
          },
          "traineeId": {
            "type": "string",
            "nullable": true
          },
          "traineeName": {
            "type": "string",
            "nullable": true
          },
          "started": {
            "type": "string",
            "format": "date-time"
          },
          "certified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expires": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "validityPeriod": {
            "type": "string",
            "format": "time-span"
          }
        }
      },
      "ListOfCertificationFact": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CertificationFact"
            }
          }
        }
      },
      "CertificationFact": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "certificationId": {
            "type": "string",
            "nullable": true
          },
          "certificateId": {
            "type": "string",
            "nullable": true
          },
          "traineeId": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "certified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "validityPeriod": {
            "type": "string",
            "format": "time-span",
            "nullable": true
          }
        }
      },
      "MemberStatus": {
        "type": "integer",
        "description": "0 = None\n1 = Left\n2 = Requested\n3 = Joined\n4 = Banned",
        "x-enumNames": [
          "None",
          "Left",
          "Requested",
          "Joined",
          "Banned"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4
        ]
      },
      "ListOfClass": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Class"
            }
          }
        }
      },
      "Class": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "gracePeriod": {
            "type": "string",
            "format": "time-span"
          },
          "allowAssessmentRequests": {
            "type": "boolean"
          },
          "teamId": {
            "type": "string",
            "nullable": true
          },
          "teamName": {
            "type": "string",
            "nullable": true
          },
          "teamCourseActivationId": {
            "type": "string",
            "nullable": true
          },
          "teamCourseActivated": {
            "type": "boolean"
          },
          "organisationId": {
            "type": "string",
            "nullable": true
          },
          "organisationName": {
            "type": "string",
            "nullable": true
          },
          "organisationLogoUri": {
            "type": "string",
            "nullable": true
          },
          "organisationCourseActivationId": {
            "type": "string",
            "nullable": true
          },
          "organisationCourseActivated": {
            "type": "boolean"
          },
          "publisherId": {
            "type": "string",
            "nullable": true
          },
          "publisherName": {
            "type": "string",
            "nullable": true
          },
          "publisherLogoUri": {
            "type": "string",
            "nullable": true
          },
          "courseId": {
            "type": "string",
            "nullable": true
          },
          "courseName": {
            "type": "string",
            "nullable": true
          },
          "courseDescription": {
            "type": "string",
            "nullable": true
          },
          "courseBannerUri": {
            "type": "string",
            "nullable": true
          },
          "courseLogoUri": {
            "type": "string",
            "nullable": true
          },
          "programs": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProgramInClass"
            }
          },
          "courseRecommendedJobTypeIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProgramInClass": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateClassSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "teamId",
          "courseId"
        ],
        "properties": {
          "teamId": {
            "type": "string",
            "minLength": 1
          },
          "courseId": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "gracePeriod": {
            "type": "string",
            "format": "time-span"
          },
          "allowAssessmentRequests": {
            "type": "boolean"
          }
        }
      },
      "UpdateClassSettings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "gracePeriod": {
            "type": "string",
            "format": "time-span"
          },
          "allowAssessmentRequests": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "NotifyAssessorsSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "enrolmentId",
          "assessmentId",
          "traineeId"
        ],
        "properties": {
          "enrolmentId": {
            "type": "string",
            "minLength": 1
          },
          "assessmentId": {
            "type": "string",
            "minLength": 1
          },
          "traineeId": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "ListOfCourse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Course"
            }
          }
        }
      },
      "Course": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "bannerUri": {
            "type": "string",
            "nullable": true
          },
          "logoUri": {
            "type": "string",
            "nullable": true
          },
          "mediaUris": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "publisherId": {
            "type": "string",
            "nullable": true
          },
          "publisherName": {
            "type": "string",
            "nullable": true
          },
          "publisherLogoUri": {
            "type": "string",
            "nullable": true
          },
          "programs": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProgramInCourse"
            }
          },
          "sections": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SectionInCourse"
            }
          },
          "certificates": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CertificateInCourse"
            }
          },
          "recommendedJobTypeIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "processReports": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProcessReportInCourse"
            }
          },
          "preSurvey": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SurveyInCourse"
              }
            ]
          },
          "postSurvey": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SurveyInCourse"
              }
            ]
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProgramInCourse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SectionInCourse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "modules": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ModuleInCourse"
            }
          }
        }
      },
      "ModuleInCourse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "imageUri": {
            "type": "string",
            "nullable": true
          },
          "open": {
            "type": "boolean"
          }
        }
      },
      "CertificateInCourse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "logoUri": {
            "type": "string",
            "nullable": true
          },
          "validityPeriod": {
            "type": "string",
            "format": "time-span"
          },
          "moduleIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ProcessReportInCourse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SurveyInCourse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "required": {
            "type": "boolean"
          }
        }
      },
      "CreateCourseSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "publisherId",
          "name"
        ],
        "properties": {
          "publisherId": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "bannerUri": {
            "type": "string",
            "description": "A base64 encoded image or a URL of existing image\n            ",
            "maxLength": 6850000,
            "minLength": 0,
            "nullable": true
          },
          "logoUri": {
            "type": "string",
            "description": "A base64 encoded image or a URL of existing image\n            ",
            "maxLength": 6850000,
            "minLength": 0,
            "nullable": true
          },
          "mediaUris": {
            "type": "array",
            "description": "A list of promotional medias. Elements can be: \n    - base64 encoded image\n    - uri of image\n    - url of video (i.e. video has to be hosted elsewhere, at least for now)",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "sections": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CourseSection"
            }
          },
          "recommendedJobTypeIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "processReportIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "preSurvey": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CourseSurvey"
              }
            ]
          },
          "postSurvey": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CourseSurvey"
              }
            ]
          }
        }
      },
      "CourseSection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "modules": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CourseModule"
            }
          }
        }
      },
      "CourseModule": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "open": {
            "type": "boolean"
          },
          "certificateIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CourseSurvey": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "required": {
            "type": "boolean"
          }
        }
      },
      "UpdateCourseSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "bannerUri": {
            "type": "string",
            "maxLength": 6850000,
            "minLength": 0,
            "nullable": true
          },
          "logoUri": {
            "type": "string",
            "maxLength": 6850000,
            "minLength": 0,
            "nullable": true
          },
          "mediaUris": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "open": {
            "type": "boolean"
          },
          "sections": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CourseSection"
            }
          },
          "recommendedJobTypeIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "processReportIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "preSurvey": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CourseSurvey"
              }
            ]
          },
          "postSurvey": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CourseSurvey"
              }
            ]
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListOfEnrolment": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Enrolment"
            }
          }
        }
      },
      "Enrolment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Enrolment2"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "courseSections": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/CourseSectionInEnrolment"
                }
              },
              "certifications": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/CertificationInEnrolment"
                }
              },
              "preSurveyResponse": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/SurveyResponseInEnrolment"
                  }
                ]
              },
              "postSurveyResponse": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/SurveyResponseInEnrolment"
                  }
                ]
              }
            }
          }
        ]
      },
      "CourseSectionInEnrolment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "modules": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ModuleInEnrolment"
            }
          }
        }
      },
      "ModuleInEnrolment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "imageUri": {
            "type": "string",
            "nullable": true
          },
          "open": {
            "type": "boolean"
          },
          "result": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CalculatedModuleResult"
              }
            ]
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "CertificationInEnrolment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "certificateId": {
            "type": "string",
            "nullable": true
          },
          "certificateName": {
            "type": "string",
            "nullable": true
          },
          "certificateLogoUri": {
            "type": "string",
            "nullable": true
          },
          "certificateModuleIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "certified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expires": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "SurveyResponseInEnrolment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "surveyId": {
            "type": "string",
            "nullable": true
          },
          "surveyName": {
            "type": "string",
            "nullable": true
          },
          "required": {
            "type": "boolean"
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "submitted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "Enrolment2": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "traineeId": {
            "type": "string",
            "nullable": true
          },
          "traineeName": {
            "type": "string",
            "nullable": true
          },
          "traineeImageUri": {
            "type": "string",
            "nullable": true
          },
          "traineeJobTypeId": {
            "type": "string",
            "nullable": true
          },
          "traineeJobTypeName": {
            "type": "string",
            "nullable": true
          },
          "traineeCourseActivationId": {
            "type": "string",
            "nullable": true
          },
          "traineeCourseActivated": {
            "type": "boolean"
          },
          "publisherId": {
            "type": "string",
            "nullable": true
          },
          "publisherName": {
            "type": "string",
            "nullable": true
          },
          "publisherLogoUri": {
            "type": "string",
            "nullable": true
          },
          "programs": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProgramInEnrolment"
            }
          },
          "courseId": {
            "type": "string",
            "nullable": true
          },
          "courseName": {
            "type": "string",
            "nullable": true
          },
          "courseBannerUri": {
            "type": "string",
            "nullable": true
          },
          "courseLogoUri": {
            "type": "string",
            "nullable": true
          },
          "classes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ClassInEnrolment"
            }
          }
        }
      },
      "ProgramInEnrolment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ClassInEnrolment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "teamId": {
            "type": "string",
            "nullable": true
          },
          "teamName": {
            "type": "string",
            "nullable": true
          },
          "teamCourseActivationId": {
            "type": "string",
            "nullable": true
          },
          "teamCourseActivated": {
            "type": "boolean"
          },
          "organisationId": {
            "type": "string",
            "nullable": true
          },
          "organisationName": {
            "type": "string",
            "nullable": true
          },
          "organisationCourseActivationId": {
            "type": "string",
            "nullable": true
          },
          "organisationCourseActivated": {
            "type": "boolean"
          },
          "joined": {
            "type": "string",
            "format": "date-time"
          },
          "gracePeriod": {
            "type": "string",
            "format": "time-span"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ListOfModuleAttempt": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleAttempt"
            }
          }
        }
      },
      "ListOfModule": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Module"
            }
          }
        }
      },
      "Module": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "imageUri": {
            "type": "string",
            "nullable": true
          },
          "publisherId": {
            "type": "string",
            "nullable": true
          },
          "publisherName": {
            "type": "string",
            "nullable": true
          },
          "publisherLogoUri": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "published": {
            "type": "boolean"
          },
          "publishedContentId": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateModuleSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "publisherId",
          "type",
          "name"
        ],
        "properties": {
          "publisherId": {
            "type": "string",
            "minLength": 1
          },
          "type": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "imageUri": {
            "type": "string",
            "maxLength": 6850000,
            "minLength": 0,
            "nullable": true
          },
          "files": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CreateFileSettings"
            }
          }
        }
      },
      "UpdateModuleSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "imageUri": {
            "type": "string",
            "maxLength": 6850000,
            "minLength": 0,
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListOfModuleNps": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleNps"
            }
          }
        }
      },
      "ModuleNps": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "dismissed": {
            "type": "boolean"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "creatorImageUri": {
            "type": "string",
            "nullable": true
          },
          "creatorJobTypeId": {
            "type": "string",
            "nullable": true
          },
          "creatorJobTypeName": {
            "type": "string",
            "nullable": true
          },
          "moduleId": {
            "type": "string",
            "nullable": true
          },
          "moduleName": {
            "type": "string",
            "nullable": true
          },
          "moduleType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Nps": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "itemId": {
            "type": "string",
            "nullable": true
          },
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "dismissed": {
            "type": "boolean"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "creatorImageUri": {
            "type": "string",
            "nullable": true
          },
          "creatorJobTypeId": {
            "type": "string",
            "nullable": true
          },
          "creatorJobTypeName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateNpsSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "moduleId"
        ],
        "properties": {
          "moduleId": {
            "type": "string",
            "minLength": 1
          },
          "comments": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "score": {
            "type": "integer",
            "format": "int32",
            "maximum": 10.0,
            "minimum": 0.0
          },
          "dismissed": {
            "type": "boolean"
          }
        }
      },
      "ListOfModuleAttemptOfQuizResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleAttemptOfQuizResult"
            }
          }
        }
      },
      "ModuleAttemptOfQuizResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModuleAttempt"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "result": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/QuizResult"
                  }
                ]
              }
            }
          }
        ]
      },
      "QuizResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sections": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/QuizSectionResult"
            }
          },
          "submitted": {
            "type": "boolean"
          }
        }
      },
      "QuizSectionResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "questions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/QuizQuestionResult"
            }
          }
        }
      },
      "QuizQuestionResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "answers": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "CreateModuleAttemptSettingsOfQuizResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "actorId",
          "moduleContentId",
          "result"
        ],
        "properties": {
          "actorId": {
            "type": "string",
            "description": "Id of the actor of ActorType being assessed",
            "minLength": 1
          },
          "moduleContentId": {
            "type": "string",
            "minLength": 1
          },
          "result": {
            "$ref": "#/components/schemas/QuizResult"
          }
        }
      },
      "UpdateModuleAttemptSettingsOfQuizResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "$ref": "#/components/schemas/QuizResult"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListOfModuleContentOfQuizSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleContentOfQuizSettings"
            }
          }
        }
      },
      "ModuleContentOfQuizSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModuleContent"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "settings": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/QuizSettings"
                  }
                ]
              }
            }
          }
        ]
      },
      "QuizSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "sections",
          "passScore"
        ],
        "properties": {
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuizSection"
            }
          },
          "passScore": {
            "type": "integer",
            "description": "The percentage required to pass the module.",
            "format": "int32",
            "maximum": 100.0,
            "minimum": 1.0
          },
          "loop": {
            "type": "boolean",
            "description": "If true, will cause the quiz to keep looping until participant passes all questions."
          }
        }
      },
      "QuizSection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "questions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/QuizQuestion"
            }
          }
        }
      },
      "QuizQuestion": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "label": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "answers": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/QuizAnswer"
            }
          }
        }
      },
      "QuizAnswer": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "label": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "correct": {
            "type": "boolean"
          }
        }
      },
      "CreateModuleContentSettingsOfQuizSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModuleContentSettingsOfQuizSettings"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "published": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "ModuleContentSettingsOfQuizSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "settings"
        ],
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/QuizSettings"
          },
          "files": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ModuleContentFileSettings"
            }
          }
        }
      },
      "UpdateModuleContentSettingsOfQuizSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModuleContentSettingsOfQuizSettings"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "version": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "ListOfModuleAttemptOfRevisionResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleAttemptOfRevisionResult"
            }
          }
        }
      },
      "ModuleAttemptOfRevisionResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModuleAttempt"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "result": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RevisionResult"
                  }
                ]
              }
            }
          }
        ]
      },
      "RevisionResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "topics": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/RevisionTopicResult"
            }
          }
        }
      },
      "RevisionTopicResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "attempts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TopicAttempt"
            }
          }
        }
      },
      "TopicAttempt": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "form": {
            "$ref": "#/components/schemas/TopicForm"
          },
          "correct": {
            "type": "boolean"
          }
        }
      },
      "TopicForm": {
        "type": "integer",
        "description": "0 = Flipcard\n1 = TrueOrFalse\n2 = MultipleChoices",
        "x-enumNames": [
          "Flipcard",
          "TrueOrFalse",
          "MultipleChoices"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "CreateModuleAttemptSettingsOfRevisionResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "actorId",
          "moduleContentId",
          "result"
        ],
        "properties": {
          "actorId": {
            "type": "string",
            "description": "Id of the actor of ActorType being assessed",
            "minLength": 1
          },
          "moduleContentId": {
            "type": "string",
            "minLength": 1
          },
          "result": {
            "$ref": "#/components/schemas/RevisionResult"
          }
        }
      },
      "UpdateModuleAttemptSettingsOfRevisionResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "$ref": "#/components/schemas/RevisionResult"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListOfModuleContentOfRevisionSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleContentOfRevisionSettings"
            }
          }
        }
      },
      "ModuleContentOfRevisionSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModuleContent"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "settings": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RevisionSettings"
                  }
                ]
              }
            }
          }
        ]
      },
      "RevisionSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "topics",
          "passScore"
        ],
        "properties": {
          "topics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Topic"
            }
          },
          "passScore": {
            "type": "integer",
            "description": "The percentage required to pass the module.",
            "format": "int32",
            "maximum": 100.0,
            "minimum": 1.0
          }
        }
      },
      "Topic": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "term",
          "definition"
        ],
        "properties": {
          "term": {
            "type": "string",
            "minLength": 1
          },
          "definition": {
            "type": "string",
            "minLength": 1
          },
          "hint": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateModuleContentSettingsOfRevisionSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModuleContentSettingsOfRevisionSettings"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "published": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "ModuleContentSettingsOfRevisionSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "settings"
        ],
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/RevisionSettings"
          },
          "files": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ModuleContentFileSettings"
            }
          }
        }
      },
      "UpdateModuleContentSettingsOfRevisionSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModuleContentSettingsOfRevisionSettings"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "version": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "ListOfTrainingSession": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrainingSession"
            }
          }
        }
      },
      "TrainingSession": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "string",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "organisationId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "modules": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ModuleInTrainingSession"
            }
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/TrainingSessionStatus"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ModuleInTrainingSession": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TrainingSessionStatus": {
        "type": "integer",
        "description": "0 = None\n1 = NotStarted\n2 = Started\n3 = Complete",
        "x-enumNames": [
          "None",
          "NotStarted",
          "Started",
          "Complete"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "CreateTrainingSessionSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "groupId",
          "name"
        ],
        "properties": {
          "groupId": {
            "type": "string",
            "description": "The organisation or team id of the training session",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "location": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LocationBuilder"
              }
            ]
          },
          "modules": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TrainingSessionModule"
            }
          }
        }
      },
      "TrainingSessionModule": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateTrainingSessionSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "location": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LocationBuilder"
              }
            ]
          },
          "modules": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TrainingSessionModule"
            }
          },
          "status": {
            "$ref": "#/components/schemas/TrainingSessionStatus"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListOfModuleAttemptOfVideoResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleAttemptOfVideoResult"
            }
          }
        }
      },
      "ModuleAttemptOfVideoResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModuleAttempt"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "result": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/VideoResult"
                  }
                ]
              }
            }
          }
        ]
      },
      "VideoResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "position": {
            "type": "string",
            "format": "time-span"
          },
          "maxPosition": {
            "type": "string",
            "format": "time-span"
          },
          "duration": {
            "type": "string",
            "format": "time-span"
          }
        }
      },
      "CreateModuleAttemptSettingsOfVideoResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "actorId",
          "moduleContentId",
          "result"
        ],
        "properties": {
          "actorId": {
            "type": "string",
            "description": "Id of the actor of ActorType being assessed",
            "minLength": 1
          },
          "moduleContentId": {
            "type": "string",
            "minLength": 1
          },
          "result": {
            "$ref": "#/components/schemas/VideoResult"
          }
        }
      },
      "UpdateModuleAttemptSettingsOfVideoResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "$ref": "#/components/schemas/VideoResult"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListOfModuleContentOfVideoSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleContentOfVideoSettings"
            }
          }
        }
      },
      "ModuleContentOfVideoSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModuleContent"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "settings": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/VideoSettings"
                  }
                ]
              }
            }
          }
        ]
      },
      "VideoSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "source"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/VideoType"
          },
          "source": {
            "type": "string",
            "description": "A URI for the video.",
            "minLength": 1
          },
          "duration": {
            "type": "string",
            "description": "The duration of the video",
            "format": "time-span"
          }
        }
      },
      "VideoType": {
        "type": "integer",
        "description": "0 = None\n1 = Vimeo\n2 = Youtube\n3 = Azure\n4 = Wistia",
        "x-enumNames": [
          "None",
          "Vimeo",
          "Youtube",
          "Azure",
          "Wistia"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4
        ]
      },
      "CreateModuleContentSettingsOfVideoSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModuleContentSettingsOfVideoSettings"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "published": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "ModuleContentSettingsOfVideoSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "settings"
        ],
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/VideoSettings"
          },
          "files": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ModuleContentFileSettings"
            }
          }
        }
      },
      "UpdateModuleContentSettingsOfVideoSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModuleContentSettingsOfVideoSettings"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "version": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "ListOfModuleAttemptOfAssessmentResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleAttemptOfAssessmentResult"
            }
          }
        }
      },
      "ModuleAttemptOfAssessmentResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModuleAttempt"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "result": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AssessmentResult"
                  }
                ]
              }
            }
          }
        ]
      },
      "AssessmentResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "attempts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AssessmentAttempt"
            }
          }
        }
      },
      "AssessmentAttempt": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "assessorId": {
            "type": "string",
            "nullable": true
          },
          "sections": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AssessmentSectionResult"
            }
          },
          "performed": {
            "type": "string",
            "format": "date-time"
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AssessmentSectionResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "selectedCriteria": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "CreateModuleAttemptSettingsOfAssessmentResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "actorId",
          "moduleContentId",
          "result"
        ],
        "properties": {
          "actorId": {
            "type": "string",
            "description": "Id of the actor of ActorType being assessed",
            "minLength": 1
          },
          "moduleContentId": {
            "type": "string",
            "minLength": 1
          },
          "result": {
            "$ref": "#/components/schemas/AssessmentResult"
          }
        }
      },
      "UpdateModuleAttemptSettingsOfAssessmentResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "$ref": "#/components/schemas/AssessmentResult"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListOfModuleContentOfAssessmentSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleContentOfAssessmentSettings"
            }
          }
        }
      },
      "ModuleContentOfAssessmentSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModuleContent"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "settings": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AssessmentSettings"
                  }
                ]
              }
            }
          }
        ]
      },
      "AssessmentSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "requiredPasses",
          "passScore",
          "sections"
        ],
        "properties": {
          "requiredPasses": {
            "type": "integer",
            "description": "The number of times the assessment must be passed for the module to be considered passed.",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0
          },
          "subsequentRequiredPasses": {
            "type": "integer",
            "description": "The number of times the assessment must be passed, after the initial pass, for the module to be considered passed.",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0,
            "nullable": true
          },
          "passScore": {
            "type": "integer",
            "description": "The percentage required to pass the assessment.",
            "format": "int32",
            "maximum": 100.0,
            "minimum": 1.0
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssessmentSection"
            }
          }
        }
      },
      "AssessmentSection": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "criteria"
        ],
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "criteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Criterion"
            }
          }
        }
      },
      "Criterion": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "body"
        ],
        "properties": {
          "body": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "CreateModuleContentSettingsOfAssessmentSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModuleContentSettingsOfAssessmentSettings"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "published": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "ModuleContentSettingsOfAssessmentSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "settings"
        ],
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/AssessmentSettings"
          },
          "files": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ModuleContentFileSettings"
            }
          }
        }
      },
      "UpdateModuleContentSettingsOfAssessmentSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModuleContentSettingsOfAssessmentSettings"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "version": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "ListOfAssessmentSubAttempt": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssessmentSubAttempt"
            }
          }
        }
      },
      "AssessmentSubAttempt": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "attemptId": {
            "type": "string",
            "nullable": true
          },
          "actorId": {
            "type": "string",
            "nullable": true
          },
          "actorName": {
            "type": "string",
            "nullable": true
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType"
          },
          "assessorId": {
            "type": "string",
            "nullable": true
          },
          "assessorName": {
            "type": "string",
            "nullable": true
          },
          "sections": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AssessmentSectionResult"
            }
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "performed": {
            "type": "string",
            "format": "date-time"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "assessmentId": {
            "type": "string",
            "nullable": true
          },
          "assessmentName": {
            "type": "string",
            "nullable": true
          },
          "assessmentContentId": {
            "type": "string",
            "nullable": true
          },
          "passScore": {
            "type": "integer",
            "format": "int32"
          },
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "passed": {
            "type": "boolean"
          },
          "publisherId": {
            "type": "string",
            "nullable": true
          },
          "classIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "trainingSessionId": {
            "type": "string",
            "nullable": true
          },
          "trainingSessionModuleAttemptId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateAssessmentSubAttemptSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "actorId",
          "assessorId",
          "moduleId",
          "moduleContentId",
          "sections",
          "performed"
        ],
        "properties": {
          "actorId": {
            "type": "string",
            "description": "Id of the actor of ActorType being assessed",
            "minLength": 1
          },
          "assessorId": {
            "type": "string",
            "minLength": 1
          },
          "moduleId": {
            "type": "string",
            "minLength": 1
          },
          "moduleContentId": {
            "type": "string",
            "minLength": 1
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssessmentSectionResult"
            }
          },
          "performed": {
            "type": "string",
            "format": "date-time",
            "minLength": 1
          },
          "notes": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          }
        }
      },
      "UpdateAssessmentSubAttemptSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "assessorId",
          "sections",
          "performed"
        ],
        "properties": {
          "assessorId": {
            "type": "string",
            "minLength": 1
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssessmentSectionResult"
            }
          },
          "performed": {
            "type": "string",
            "format": "date-time",
            "minLength": 1
          },
          "notes": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AuthenticationSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "email"
        ],
        "properties": {
          "method": {
            "default": 0,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AuthenticationMethod"
              }
            ]
          },
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1
          },
          "password": {
            "type": "string",
            "description": "This will be the password if using password to login, or the one-time passcode if using one-time passcode\nto login.",
            "default": "",
            "nullable": true
          },
          "twoFactorAuthenticationCode": {
            "type": "string",
            "description": "Optional 2FA code.",
            "nullable": true
          }
        }
      },
      "AuthenticationMethod": {
        "type": "integer",
        "description": "0 = Password\n1 = OneTimePasscode",
        "x-enumNames": [
          "Password",
          "OneTimePasscode"
        ],
        "enum": [
          0,
          1
        ]
      },
      "ChallengeToken": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Token"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "success": {
                "type": "boolean"
              },
              "twoFactorAuthenticationChallenge": {
                "$ref": "#/components/schemas/TwoFactorAuthenticationType"
              },
              "rateLimit": {
                "type": "string",
                "format": "time-span"
              }
            }
          }
        ]
      },
      "TwoFactorAuthenticationType": {
        "type": "integer",
        "description": "0 = None\n1 = Sms\n2 = Email",
        "x-enumNames": [
          "None",
          "Sms",
          "Email"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "Identity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/IdentityType"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "imageUri": {
            "type": "string",
            "nullable": true
          },
          "groups": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IdentityGroup"
            }
          },
          "impersonatorId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "IdentityGroup": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "groupId": {
            "type": "string",
            "nullable": true
          },
          "groupType": {
            "type": "string",
            "nullable": true
          },
          "parentGroups": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GroupIdAndType"
            }
          },
          "displayId": {
            "type": "string",
            "nullable": true
          },
          "labelIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "roles": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GroupIdAndType": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CommunicationPreferences": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "emails": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/EmailPreference"
            }
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EmailPreference": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EmailPreference2"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "category": {
                "type": "string",
                "nullable": true
              },
              "reason": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "EmailPreference2": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "ignore": {
            "type": "boolean"
          }
        }
      },
      "UpdateCommunicationPreferencesSettings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "emails": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/EmailPreference2"
            }
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UnsubscribeToken": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "emailType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EmailSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "ListOfGroupComment": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupComment"
            }
          }
        }
      },
      "GroupComment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Comment"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "groupName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "Group": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "organisationId": {
            "type": "string",
            "nullable": true
          },
          "teamId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ListOfGroupFile": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupFile"
            }
          }
        }
      },
      "GroupFile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/File"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "groupName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ListOfJobType": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobType"
            }
          }
        }
      },
      "JobType": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateJobTypeSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "category": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0,
            "nullable": true
          }
        }
      },
      "UpdateJobTypeSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "category": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0,
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListOfLabel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Label"
            }
          }
        }
      },
      "Label": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "groupId": {
            "type": "string",
            "nullable": true
          },
          "groupType": {
            "type": "string",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "colour": {
            "$ref": "#/components/schemas/Colour"
          }
        }
      },
      "Colour": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "red": {
            "type": "integer",
            "format": "int32"
          },
          "green": {
            "type": "integer",
            "format": "int32"
          },
          "blue": {
            "type": "integer",
            "format": "int32"
          },
          "alpha": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateLabelSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "groupId",
          "name"
        ],
        "properties": {
          "groupId": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "colour": {
            "$ref": "#/components/schemas/Colour"
          }
        }
      },
      "UpdateLabelSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "colour": {
            "$ref": "#/components/schemas/Colour"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListOfMember": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Member"
            }
          }
        }
      },
      "Member": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "string",
            "nullable": true
          },
          "groupType": {
            "type": "string",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "parentGroups": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GroupIdAndType"
            }
          },
          "templateId": {
            "type": "string",
            "nullable": true
          },
          "templateParentIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "userImageUri": {
            "type": "string",
            "nullable": true
          },
          "userEmail": {
            "type": "string",
            "nullable": true
          },
          "userJobTypeId": {
            "type": "string",
            "nullable": true
          },
          "userJobTypeName": {
            "type": "string",
            "nullable": true
          },
          "userJobTypeCategory": {
            "type": "string",
            "nullable": true
          },
          "userQualifications": {
            "type": "string",
            "nullable": true
          },
          "userActivated": {
            "type": "boolean"
          },
          "userLastActive": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "displayId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/MemberStatus"
          },
          "roles": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "joined": {
            "type": "string",
            "format": "date-time"
          },
          "labelIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MemberHistory": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/MemberStatus"
          },
          "roles": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AddGroupMemberSettings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "displayId": {
            "type": "string",
            "nullable": true
          },
          "additionalRoles": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "notify": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          }
        }
      },
      "UpdateGroupMemberSettings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "displayId": {
            "type": "string",
            "nullable": true
          },
          "additionalRoles": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "labelIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ListOfOrganisationAccessToken": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganisationAccessToken"
            }
          }
        }
      },
      "OrganisationAccessToken": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "organisationId": {
            "type": "string",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string",
            "nullable": true
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "lastUsed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "token": {
            "type": "string",
            "description": "Only available at time of creation",
            "nullable": true
          }
        }
      },
      "CreateOrganisationAccessTokenSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "organisationId",
          "roles"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "organisationId": {
            "type": "string",
            "minLength": 1
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ListOfOrganisation": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Organisation"
            }
          }
        }
      },
      "Organisation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "type": "string",
            "nullable": true
          },
          "bannerUri": {
            "type": "string",
            "nullable": true
          },
          "logoUri": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "privacy": {
            "$ref": "#/components/schemas/PrivacyLevel"
          },
          "website": {
            "type": "string",
            "nullable": true
          },
          "cultureCode": {
            "type": "string",
            "nullable": true
          },
          "timeZoneId": {
            "type": "string",
            "nullable": true
          },
          "portalUri": {
            "type": "string",
            "nullable": true
          },
          "colour": {
            "$ref": "#/components/schemas/Colour"
          },
          "registrationWhitelist": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "publishingApproved": {
            "type": "boolean"
          },
          "shifts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Shift"
            }
          }
        }
      },
      "Shift": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "start": {
            "type": "string",
            "format": "time-span"
          },
          "end": {
            "type": "string",
            "format": "time-span"
          }
        }
      },
      "CreateOrganisationSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "contactEmail": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "bannerUri": {
            "type": "string",
            "maxLength": 6850000,
            "minLength": 0,
            "nullable": true
          },
          "logoUri": {
            "type": "string",
            "maxLength": 6850000,
            "minLength": 0,
            "nullable": true
          },
          "colour": {
            "$ref": "#/components/schemas/Colour"
          },
          "location": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LocationBuilder"
              }
            ]
          },
          "website": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "portalUri": {
            "type": "string",
            "nullable": true
          },
          "cultureCode": {
            "type": "string",
            "nullable": true
          },
          "timeZoneId": {
            "type": "string",
            "nullable": true
          },
          "privacy": {
            "$ref": "#/components/schemas/PrivacyLevel"
          },
          "registrationWhitelist": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "shifts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Shift"
            }
          }
        }
      },
      "UpdateOrganisationSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "contactEmail": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "bannerUri": {
            "type": "string",
            "maxLength": 6850000,
            "minLength": 0,
            "nullable": true
          },
          "logoUri": {
            "type": "string",
            "maxLength": 6850000,
            "minLength": 0,
            "nullable": true
          },
          "colour": {
            "$ref": "#/components/schemas/Colour"
          },
          "location": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LocationBuilder"
              }
            ]
          },
          "website": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "portalUri": {
            "type": "string",
            "nullable": true
          },
          "privacy": {
            "$ref": "#/components/schemas/PrivacyLevel"
          },
          "timeZoneId": {
            "type": "string",
            "nullable": true
          },
          "cultureCode": {
            "type": "string",
            "nullable": true
          },
          "registrationWhitelist": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "shifts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Shift"
            }
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Password": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "exists": {
            "type": "boolean"
          },
          "twoFactorAuthentication": {
            "$ref": "#/components/schemas/TwoFactorAuthenticationType"
          }
        }
      },
      "UpdatePasswordSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "password"
        ],
        "properties": {
          "password": {
            "type": "string",
            "minLength": 1
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateTwoFactorAuthenticationSettings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TwoFactorAuthenticationType"
          },
          "userVersion": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RequestResetPasswordSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1
          }
        }
      },
      "ResetPasswordSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "token",
          "password"
        ],
        "properties": {
          "token": {
            "type": "string",
            "minLength": 1
          },
          "password": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "ListOfRole": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          }
        }
      },
      "Role": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "groupType": {
            "type": "string",
            "nullable": true
          },
          "owner": {
            "type": "boolean"
          },
          "default": {
            "type": "boolean"
          },
          "fallback": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ListOfTeam": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Team"
            }
          }
        }
      },
      "Team": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "bannerUri": {
            "type": "string",
            "nullable": true
          },
          "privacy": {
            "$ref": "#/components/schemas/PrivacyLevel"
          },
          "tags": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "organisationId": {
            "type": "string",
            "nullable": true
          },
          "organisationName": {
            "type": "string",
            "nullable": true
          },
          "organisationLogoUri": {
            "type": "string",
            "nullable": true
          },
          "organisationPrivacy": {
            "$ref": "#/components/schemas/PrivacyLevel"
          }
        }
      },
      "CreateTeamSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "organisationId",
          "name"
        ],
        "properties": {
          "organisationId": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "bannerUri": {
            "type": "string",
            "maxLength": 6850000,
            "minLength": 0,
            "nullable": true
          },
          "privacy": {
            "$ref": "#/components/schemas/PrivacyLevel"
          },
          "tags": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UpdateTeamSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "bannerUri": {
            "type": "string",
            "maxLength": 6850000,
            "minLength": 0,
            "nullable": true
          },
          "privacy": {
            "$ref": "#/components/schemas/PrivacyLevel"
          },
          "tags": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListOfUserActivity": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserActivity"
            }
          }
        }
      },
      "UserActivity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "trackId": {
            "type": "string",
            "nullable": true
          },
          "activityType": {
            "$ref": "#/components/schemas/UserActivityType"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "creatorId": {
            "type": "string",
            "nullable": true
          },
          "creatorType": {
            "$ref": "#/components/schemas/IdentityType"
          },
          "payload": {
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserActivityType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Unknown",
          "Joined",
          "Left",
          "Banned",
          "RolesAdded",
          "RolesRemoved",
          "ModuleAttempt",
          "SurveyResponse"
        ],
        "enum": [
          "Unknown",
          "Joined",
          "Left",
          "Banned",
          "RolesAdded",
          "RolesRemoved",
          "ModuleAttempt",
          "SurveyResponse"
        ]
      },
      "ListOfUser": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalItemCount",
          "items"
        ],
        "properties": {
          "totalItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "User": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "imageUri": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "qualifications": {
            "type": "string",
            "nullable": true
          },
          "jobTypeId": {
            "type": "string",
            "nullable": true
          },
          "jobTypeName": {
            "type": "string",
            "nullable": true
          },
          "jobTypeCategory": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateUserSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1
          },
          "password": {
            "type": "string",
            "minLength": 1
          },
          "reCaptchaResponse": {
            "type": "string",
            "nullable": true
          },
          "redirect": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "OnboardUserSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "email",
          "groupId"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1
          },
          "groupId": {
            "type": "string",
            "minLength": 1
          },
          "displayId": {
            "type": "string",
            "nullable": true
          },
          "jobTypeId": {
            "type": "string",
            "nullable": true
          },
          "additionalRoles": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "notify": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          }
        }
      },
      "UpdateUserSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "qualifications": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 0,
            "nullable": true
          },
          "jobTypeId": {
            "type": "string",
            "nullable": true
          },
          "imageUri": {
            "type": "string",
            "maxLength": 6850000,
            "minLength": 0,
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MergeUserSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "primaryUserId",
          "secondaryUserId"
        ],
        "properties": {
          "primaryUserId": {
            "type": "string",
            "minLength": 1
          },
          "secondaryUserId": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "SendWelcomeEmailSettings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "groupId": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "redirect": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserEmails": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "emails": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/UserEmail"
            }
          },
          "primaryEmail": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UserEmail": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "verified": {
            "type": "boolean"
          }
        }
      },
      "UserEmailSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UserEmailVerificationToken": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Token"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "primary": {
                "type": "boolean",
                "description": "If is verifying the primary email."
              },
              "regression": {
                "type": "boolean",
                "description": "If the email has been already been verified."
              }
            }
          }
        ]
      },
      "UserPhoneNumber": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "verified": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateUserPhoneNumberSettings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userVersion": {
            "type": "integer",
            "format": "int32"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "VerificationRequestResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sent": {
            "type": "boolean"
          },
          "waitSeconds": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "tags": [
    {
      "name": "Organisation",
      "description": "Organisations represent a logical organisation the real world.\n            \nThese could be:\n- hospitals\n- content publishers"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Email",
      "tags": [
        "Email"
      ]
    },
    {
      "name": "Event",
      "tags": [
        "GroupAttendance",
        "Meeting",
        "UserAttendance"
      ]
    },
    {
      "name": "Infrastructure",
      "tags": [
        "Backup",
        "ExternalApplication",
        "Image",
        "Log",
        "Platform",
        "Projection"
      ]
    },
    {
      "name": "Notification",
      "tags": [
        "Notification",
        "ScheduledEmail"
      ]
    },
    {
      "name": "Observation",
      "tags": [
        "ObservationContent",
        "Observation",
        "ObservationDefinition",
        "ObservationForm",
        "ObservationMigration",
        "ObservationSettings"
      ]
    },
    {
      "name": "Payment",
      "tags": [
        "Customer",
        "Merchant",
        "Payment",
        "PaymentSettings",
        "Product",
        "Publisher",
        "Stripe"
      ]
    },
    {
      "name": "Program",
      "tags": [
        "TaskFile",
        "Implementation",
        "ItemActivation",
        "ProgramActivation",
        "Program",
        "ProgramPhase",
        "TaskComment",
        "Task"
      ]
    },
    {
      "name": "Sharing",
      "tags": [
        "Sharing"
      ]
    },
    {
      "name": "Support",
      "tags": [
        "Ticket"
      ]
    },
    {
      "name": "Survey",
      "tags": [
        "SurveyContent",
        "Survey",
        "SurveyRequest",
        "SurveyResponse"
      ]
    },
    {
      "name": "Assessment",
      "tags": [
        "AssessmentAttempt",
        "AssessmentContent",
        "AssessmentSubAttempt"
      ]
    },
    {
      "name": "Training",
      "tags": [
        "Actor",
        "BookAttempt",
        "BookContent",
        "Certificate",
        "Certification",
        "Class",
        "Course",
        "Enrolment",
        "ModuleAttempt",
        "Module",
        "ModuleNps",
        "QuizAttempt",
        "QuizContent",
        "RevisionAttempt",
        "RevisionContent",
        "TrainingSession",
        "VideoAttempt",
        "VideoContent"
      ]
    },
    {
      "name": "User",
      "tags": [
        "Authentication",
        "CommunicationPreferences",
        "EmailRegistration",
        "GroupComment",
        "Group",
        "GroupFile",
        "JobType",
        "Label",
        "Member",
        "OrganisationAccessToken",
        "Organisation",
        "Password",
        "PhoneNumberRegistration",
        "Role",
        "Team",
        "UserActivity",
        "User",
        "UserEmail",
        "UserPhoneNumber"
      ]
    }
  ],
  "x-logo": {
    "url": "https://repository-images.githubusercontent.com/197520474/90196b00-aa19-11e9-9ae5-0d239f3b7bf0",
    "backgroundColor": "#FFFFFF"
  }
}